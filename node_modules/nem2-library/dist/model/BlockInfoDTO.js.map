{"version":3,"sources":["../../src/model/BlockInfoDTO.js"],"names":["BlockInfoDTO","meta","block","undefined","data","obj","hasOwnProperty","BlockMetaDTO","constructFromObject","BlockDTO"],"mappings":";;;;;;qjBAAA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;;;AAcA;;;;AACA;;;;AACA;;;;;;;;AAMA;;;;;IAKqBA,Y;AACjB;;;;;;;;AAQA,0BAAYC,IAAZ,EAAkBC,KAAlB,EAAyB;AAAA;;AAAA,aAuCzBD,IAvCyB,GAuClBE,SAvCkB;AAAA,aA2CzBD,KA3CyB,GA2CjBC,SA3CiB;;;AAMrB,aAAK,MAAL,IAAeF,IAAf,CAAoB,KAAK,OAAL,IAAgBC,KAAhB;AAGvB;;AAED;;;;;;;;;;;4CAO2BE,I,EAAMC,G,EAAK;AAClC,gBAAID,IAAJ,EAAU;AACNC,sBAAMA,OAAO,IAAIL,YAAJ,EAAb;;AAMA,oBAAII,KAAKE,cAAL,CAAoB,MAApB,CAAJ,EAAiC;AAC7BD,wBAAI,MAAJ,IAAcE,uBAAaC,mBAAb,CAAiCJ,KAAK,MAAL,CAAjC,CAAd;AACH;AACD,oBAAIA,KAAKE,cAAL,CAAoB,OAApB,CAAJ,EAAkC;AAC9BD,wBAAI,OAAJ,IAAeI,mBAASD,mBAAT,CAA6BJ,KAAK,OAAL,CAA7B,CAAf;AACH;AACJ;AACD,mBAAOC,GAAP;AACH;;AAED;;;;AAIA;;;;;;;;;kBAjDiBL,Y","file":"BlockInfoDTO.js","sourcesContent":["/*\n * Copyright 2019 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Catapult REST API Reference\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.12\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport ApiClient from '../ApiClient';\nimport BlockDTO from './BlockDTO';\nimport BlockMetaDTO from './BlockMetaDTO';\n\n\n\n\n\n/**\n* The BlockInfoDTO model module.\n* @module model/BlockInfoDTO\n* @version 1.0.12\n*/\nexport default class BlockInfoDTO {\n    /**\n    * Constructs a new <code>BlockInfoDTO</code>.\n    * @alias module:model/BlockInfoDTO\n    * @class\n    * @param meta {module:model/BlockMetaDTO} \n    * @param block {module:model/BlockDTO} \n    */\n\n    constructor(meta, block) {\n        \n\n        \n        \n\n        this['meta'] = meta;this['block'] = block;\n\n        \n    }\n\n    /**\n    * Constructs a <code>BlockInfoDTO</code> from a plain JavaScript object, optionally creating a new instance.\n    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n    * @param {Object} data The plain JavaScript object bearing properties of interest.\n    * @param {module:model/BlockInfoDTO} obj Optional instance to populate.\n    * @return {module:model/BlockInfoDTO} The populated <code>BlockInfoDTO</code> instance.\n    */\n    static constructFromObject(data, obj) {\n        if (data) {\n            obj = obj || new BlockInfoDTO();\n\n            \n            \n            \n\n            if (data.hasOwnProperty('meta')) {\n                obj['meta'] = BlockMetaDTO.constructFromObject(data['meta']);\n            }\n            if (data.hasOwnProperty('block')) {\n                obj['block'] = BlockDTO.constructFromObject(data['block']);\n            }\n        }\n        return obj;\n    }\n\n    /**\n    * @member {module:model/BlockMetaDTO} meta\n    */\n    meta = undefined;\n    /**\n    * @member {module:model/BlockDTO} block\n    */\n    block = undefined;\n\n\n\n\n\n\n\n\n}\n\n\n"]}