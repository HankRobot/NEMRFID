{"version":3,"sources":["../../src/model/NamespaceIds.js"],"names":["NamespaceIds","namespaceIds","undefined","data","obj","hasOwnProperty","ApiClient","convertToType"],"mappings":";;;;;;qjBAAA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;;;AAcA;;;;;;;;AAMA;;;;;IAKqBA,Y;AACjB;;;;;;AAMA,4BAAc;AAAA;;AAAA,aAoCdC,YApCc,GAoCCC,SApCD;AASb;;AAED;;;;;;;;;;;4CAO2BC,I,EAAMC,G,EAAK;AAClC,gBAAID,IAAJ,EAAU;AACNC,sBAAMA,OAAO,IAAIJ,YAAJ,EAAb;;AAMA,oBAAIG,KAAKE,cAAL,CAAoB,cAApB,CAAJ,EAAyC;AACrCD,wBAAI,cAAJ,IAAsBE,oBAAUC,aAAV,CAAwBJ,KAAK,cAAL,CAAxB,EAA8C,CAAC,QAAD,CAA9C,CAAtB;AACH;AACJ;AACD,mBAAOC,GAAP;AACH;;AAED;;;;;;;;;kBAxCiBJ,Y","file":"NamespaceIds.js","sourcesContent":["/*\n * Copyright 2019 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Catapult REST API Reference\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.12\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport ApiClient from '../ApiClient';\n\n\n\n\n\n/**\n* The NamespaceIds model module.\n* @module model/NamespaceIds\n* @version 1.0.12\n*/\nexport default class NamespaceIds {\n    /**\n    * Constructs a new <code>NamespaceIds</code>.\n    * @alias module:model/NamespaceIds\n    * @class\n    */\n\n    constructor() {\n        \n\n        \n        \n\n        \n\n        \n    }\n\n    /**\n    * Constructs a <code>NamespaceIds</code> from a plain JavaScript object, optionally creating a new instance.\n    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n    * @param {Object} data The plain JavaScript object bearing properties of interest.\n    * @param {module:model/NamespaceIds} obj Optional instance to populate.\n    * @return {module:model/NamespaceIds} The populated <code>NamespaceIds</code> instance.\n    */\n    static constructFromObject(data, obj) {\n        if (data) {\n            obj = obj || new NamespaceIds();\n\n            \n            \n            \n\n            if (data.hasOwnProperty('namespaceIds')) {\n                obj['namespaceIds'] = ApiClient.convertToType(data['namespaceIds'], ['String']);\n            }\n        }\n        return obj;\n    }\n\n    /**\n    * @member {Array.<String>} namespaceIds\n    */\n    namespaceIds = undefined;\n\n\n\n\n\n\n\n\n}\n\n\n"]}