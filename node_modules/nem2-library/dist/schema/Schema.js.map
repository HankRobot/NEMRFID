{"version":3,"sources":["../../src/schema/Schema.js"],"names":["ubyte","byte","ushort","short","uint","int","array","string","table","tableArray","TypeSize","BYTE","SHORT","INT","name","ScalarAttribute","typeSize","ArrayAttribute","schema","TableAttribute","TableArrayAttribute","readInt32","offset","bytes","readInt16","__offset","val0","fieldPos","vtable","__vector_length","__indirect","__vector","findVector","size","offsetLong","vecStart","vecLength","slice","findParam","numBytes","findObjectStartPosition","findArrayLength","findObjectArrayElementStartPosition","index","vector","Schema","schemaDefinition","i","resultBytes","length","concat","serialize","result","debugSerialize","Attribute","buffer","position","undefined","Error","messageStartPosition","arrayLength","startArrayPosition","j"],"mappings":"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","file":"Schema.js","sourcesContent":["/*\n * Copyright 2018 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-use-before-define */\n\n/**\n * In bytes\n * @type {{BYTE: number, SHORT: number, INT: number}}\n */\nexport const TypeSize = {\n\tBYTE: 1,\n\tSHORT: 2,\n\tINT: 4\n};\n\n/**\n * @param {string} name Attribute name\n * @returns {ScalarAttribute} return ScalarAttribute Instance\n */\nexport function ubyte(name) {\n\treturn new ScalarAttribute(name, TypeSize.BYTE);\n}\n\n/**\n *\n * @param {string} name Attribute Name\n * @returns {ScalarAttribute} ScalarAttribute Instance\n */\nexport function byte(name) {\n\treturn new ScalarAttribute(name, TypeSize.BYTE);\n}\n\n/**\n *\n * @param {string} name Attribute Name\n * @returns {ScalarAttribute} ScalarAttribute Instance\n */\nexport function ushort(name) {\n\treturn new ScalarAttribute(name, TypeSize.SHORT);\n}\n\n/**\n *\n * @param {string} name Attribute Name\n * @returns {ScalarAttribute} ScalarAttribute Instance\n */\nexport function short(name) {\n\treturn new ScalarAttribute(name, TypeSize.SHORT);\n}\n\n/**\n *\n * @param {string} name Attribute Name\n * @returns {ScalarAttribute} ScalarAttribute Instance\n */\nexport function uint(name) {\n\treturn new ScalarAttribute(name, TypeSize.INT);\n}\n\n/**\n *\n * @param {string} name Attribute Name\n * @returns {ScalarAttribute} ScalarAttribute Instance\n */\nexport function int(name) {\n\treturn new ScalarAttribute(name, TypeSize.INT);\n}\n\n/**\n *\n * @param {string} name Attribute Name\n * @param {number} typeSize Attribute Byte Size\n * @returns {ArrayAttribute} ArrayAttribute Instance\n */\nexport function array(name, typeSize = TypeSize.BYTE) {\n\treturn new ArrayAttribute(name, typeSize);\n}\n\n/**\n *\n * @param {string} name Attribute Name\n * @returns {ArrayAttribute} ArrayAttribute Instance\n */\nexport function string(name) {\n\treturn array(name);\n}\n\n/**\n *\n * @param {string} name Attribute Name\n * @param {module:schema/Schema} schema Table Specific Schema definition\n * @returns {TableAttribute} TableAttribute Instance\n */\nexport function table(name, schema) {\n\treturn new TableAttribute(name, schema);\n}\n\n/**\n *\n * @param {string} name Attribute Name\n * @param {module:schema/Schema} schema Schema Definition\n * @returns {TableArrayAttribute} TableAttribute Instance\n */\nexport function tableArray(name, schema) {\n\treturn new TableArrayAttribute(name, schema);\n}\n\n/* eslint-disable */\nconst readInt32 = (offset, bytes) => {\n\treturn bytes[offset] | bytes[offset + 1] << 8 | bytes[offset + 2] << 16 | bytes[offset + 3] << 24;\n};\n\nconst readInt16 = (offset, bytes) => {\n\treturn bytes[offset] | bytes[offset + 1] << 8;\n};\n\n// region flatbuffers region\nconst __offset = (val0, fieldPos, bytes) => {\n\tconst vtable = val0 - readInt32(val0, bytes);\n\treturn fieldPos < readInt16(vtable, bytes) ? readInt16(vtable + fieldPos, bytes) : 0;\n};\n\nlet __vector_length = (offset, bytes) => {\n\treturn readInt32(offset + readInt32(offset, bytes), bytes);\n};\n\nlet __indirect = (offset, bytes) => {\n\treturn offset + readInt32(offset, bytes);\n};\n\nlet __vector = (offset, bytes) => {\n\treturn offset + readInt32(offset, bytes) + 4;\n};\n\nlet findVector = (val0, fieldPos, bytes, size) => {\n\tlet offset = __offset(val0, fieldPos, bytes);\n\tlet offsetLong = offset + val0;\n\tlet vecStart = __vector(offsetLong, bytes);\n\tlet vecLength = __vector_length(offsetLong, bytes) * (size ? size : 1);\n\treturn offset ? bytes.slice(vecStart, vecStart + vecLength) : 0;\n};\n\nconst findParam = (val0, fieldPos, bytes, numBytes) => {\n\tlet offset = __offset(val0, fieldPos, bytes);\n\treturn offset ? bytes.slice(offset + val0, offset + val0 + numBytes) : 0;\n};\n\nconst findObjectStartPosition = (val0, fieldPos, bytes) => {\n\tlet offset = __offset(val0, fieldPos, bytes);\n\treturn __indirect(offset + val0, bytes);\n};\n\nlet findArrayLength = (val0, fieldPos, bytes) => {\n\tconst offset = __offset(val0, fieldPos, bytes);\n\treturn offset ? __vector_length(val0 + offset, bytes) : 0;\n};\n\nlet findObjectArrayElementStartPosition = (val0, fieldPos, bytes, index) => {\n\tconst offset = __offset(val0, fieldPos, bytes);\n\tlet vector = __vector(val0 + offset, bytes);\n\treturn __indirect(vector + index * 4, bytes);\n};\n// endregion\n\n/**\n * Schema\n * @module schema/Schema\n */\nexport class Schema {\n\t/**\n\t * @constructor\n\t * @param {Array.<Attribute>} schemaDefinition Schema Definition\n\t */\n\tconstructor(schemaDefinition) {\n\t\tthis.schemaDefinition = schemaDefinition;\n\t}\n\n\t/**\n\t *\n\t * @param {Uint8Array} bytes flatbuffers bytes\n\t * @returns {Uint8Array} catapult buffer\n\t */\n\tserialize(bytes) {\n\t\tlet i = 0;\n\t\tlet resultBytes = [];\n\t\twhile (i < this.schemaDefinition.length) {\n\t\t\tresultBytes = resultBytes.concat(this.schemaDefinition[i].serialize(bytes, 4 + (i * 2)));\n\t\t\ti++;\n\t\t}\n\t\treturn resultBytes;\n\t}\n\n\t/**\n\t * @param {Uint8Array} bytes flatbuffer bytes\n\t * @returns {Array} Array with field name + payload\n\t */\n\tdebugSerialize(bytes) {\n\t\tlet i = 0;\n\t\tlet result = [];\n\t\twhile (i < this.schemaDefinition.length) {\n\t\t\tresult = result.concat({\n\t\t\t\tname: this.schemaDefinition[i].name,\n\t\t\t\tbytes: this.schemaDefinition[i].debugSerialize(bytes, 4 + i * 2)\n\t\t\t});\n\t\t\ti++;\n\t\t}\n\t\treturn result;\n\t}\n}\n\n\nclass Attribute {\n\t/**\n\t * @constructor\n\t * @param {string} name schema attribute name\n\t */\n\tconstructor(name) {\n\t\tthis.name = name;\n\t}\n\n\t/**\n\t *\n\t * @param {Uint8Array} buffer flatbuffer bytes\n\t * @param {number} position attribute possition in flatbuffer bytes\n\t * @param {number} val0 position in case that it is an inner object\n\t */\n\tserialize(buffer, position, val0 = undefined) {\n\t\tthrow new Error('Unimplemented method');\n\t}\n\n\t/**\n\t * @suppress warnings\n\t * @param {Uint8Array} buffer buffer flatbuffer bytes\n\t * @param {number} position attribute possition in flatbuffer bytes\n\t * @param {number} val0 position in case that it is an inner object\n\t */\n\tdebugSerialize(buffer, position, val0 = undefined) {\n\t\tthrow new Error('Unimplemented method');\n\t}\n}\n\nclass ScalarAttribute extends Attribute {\n\t/**\n\t * @constructor\n\t * @param {string} name schema attribute name\n\t * @param {number} typeSize\n\t */\n\tconstructor(name, typeSize) {\n\t\tsuper(name);\n\t\tthis.typeSize = typeSize;\n\t}\n\n\tserialize(buffer, position, val0 = undefined) {\n\t\treturn findParam(val0 ? val0 : buffer[0], position, buffer, this.typeSize);\n\t}\n\n\n\tdebugSerialize(buffer, position, val0 = undefined) {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tbytes: this.serialize(buffer, position, val0)\n\t\t}\n\t}\n}\n\nclass ArrayAttribute extends Attribute {\n\t/**\n\t * @constructor\n\t * @param name - {string}\n\t * @param typeSize - {TypeSize}\n\t */\n\tconstructor(name, typeSize) {\n\t\tsuper(name);\n\t\tthis.typeSize = typeSize;\n\t}\n\n\tserialize(buffer, position, val0 = undefined) {\n\t\treturn findVector(val0 ? val0 : buffer[0], position, buffer, this.typeSize);\n\t}\n\n\n\tdebugSerialize(buffer, position, val0 = undefined) {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tbytes: this.serialize(buffer, position, val0)\n\t\t}\n\t}\n}\n\nclass TableAttribute extends Attribute {\n\t/**\n\t *\n\t * @param {string} name\n\t * @param {module:schema/Schema} schema\n\t */\n\tconstructor(name, schema) {\n\t\tsuper(name);\n\t\tthis.schema = schema;\n\t}\n\n\tserialize(bytes, position, val0 = undefined) {\n\t\tlet result = [];\n\t\tlet messageStartPosition = findObjectStartPosition(val0 ? val0 : bytes[0], position, bytes);\n\t\tlet i = 0;\n\t\twhile (i < this.schema.length) {\n\t\t\tresult = result.concat(this.schema[i].serialize(bytes, 4 + i * 2, messageStartPosition));\n\t\t\ti++;\n\t\t}\n\t\treturn result;\n\t}\n\n\tdebugSerialize(buffer, position, val0 = undefined) {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tbytes: this.serialize(buffer, position, val0)\n\t\t}\n\t}\n}\n\nclass TableArrayAttribute extends Attribute {\n\t/**\n\t * @constructor\n\t * @param {string} name\n\t * @param {module:schema/Schema} schema\n\t */\n\tconstructor(name, schema) {\n\t\tsuper(name);\n\t\tthis.schema = schema;\n\t}\n\n\tserialize(bytes, position, val0 = undefined) {\n\t\tlet result = [];\n\t\tconst arrayLength = findArrayLength(val0 ? val0 : bytes[0], position, bytes);\n\t\tlet i = 0;\n\t\twhile (i < arrayLength) {\n\t\t\tlet startArrayPosition = findObjectArrayElementStartPosition(val0 ? val0 : bytes[0], position, bytes, i);\n\t\t\tfor (let j = 0; j < this.schema.length; ++j) {\n\t\t\t\tresult = result.concat(this.schema[j].serialize(bytes, 4 + j * 2, startArrayPosition));\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\treturn result;\n\t};\n\n\n\tdebugSerialize(buffer, position, val0 = undefined) {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tbytes: this.serialize(buffer, position, val0)\n\t\t}\n\t}\n}\n"]}