{"version":3,"sources":["../../src/listeners/UnconfirmedTransactionsListener.js"],"names":["UnconfirmedTransactionsListener","address","callback","subscribeToChannel","Listener"],"mappings":";;;;;;;;AAgBA;;;;;;;;;;+eAhBA;;;;;;;;;;;;;;;;AAkBA;;;;IAIqBA,+B;;;;;;;;;;;;AACpB;;;;;mCAKeC,O,EAASC,Q,EAAU;AACjC,WAAKC,kBAAL,uBAA4CF,OAA5C,EAAuDC,QAAvD;AACA;;AAED;;;;;;;;uCAKmBD,O,EAASC,Q,EAAU;AACrC,WAAKC,kBAAL,yBAA8CF,OAA9C,EAAyDC,QAAzD;AACA;;;;EAjB2DE,kB;;kBAAxCJ,+B","file":"UnconfirmedTransactionsListener.js","sourcesContent":["/*\n * Copyright 2018 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Listener from './Listener';\n\n/**\n * Unconfirmed transactions listener\n * @module listeners/UnconfirmedTransactionsListener\n */\nexport default class UnconfirmedTransactionsListener extends Listener {\n\t/**\n\t * Returns unconfirmed transactions for a given address when they are created\n\t * @param {string} address address to subscribe\n\t * @param {WebSocketCallback} callback called when a new unconfirmed transaction is announced into the network\n\t */\n\taddedToAccount(address, callback) {\n\t\tthis.subscribeToChannel(`unconfirmedAdded/${address}`, callback);\n\t}\n\n\t/**\n\t * Returns unconfirmed transactions hashes for a given address when they are confirmed\n\t * @param {string} address address to subscribe\n\t * @param {WebSocketCallback} callback called when a unconfirmed transaction is confirmed by the network\n\t */\n\tremovedFromAccount(address, callback) {\n\t\tthis.subscribeToChannel(`unconfirmedRemoved/${address}`, callback);\n\t}\n}\n\n"]}