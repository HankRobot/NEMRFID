{"version":3,"sources":["../../src/buffers/CommonBuffer.js"],"names":["concat_typedarrays","bufferUtils","fit_bytearray","buffer_to_uint","uint_to_buffer","MosaicBuffer","getMosaicid","mosaicId","setMosaicid","getAmount","amount","setAmount","serialize","newArray","Uint8Array","fitArraymosaicId","fitArrayamount","consumableBuffer","object","get_bytes","SizePrefixedEntityBuffer","getSize","size","setSize","fitArraysize","VerifiableEntityBuffer","getSignature","signature","setSignature","fitArraysignature","EntityBodyBuffer","getSigner","signer","setSigner","getVersion","version","setVersion","getType","type","setType","fitArraysigner","fitArrayversion","fitArraytype","module","exports"],"mappings":"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","file":"CommonBuffer.js","sourcesContent":["/*\n * Copyright 2019 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport bufferUtils from './BufferUtils';\n\nconst concat_typedarrays = bufferUtils.concat_typedarrays;\nconst fit_bytearray = bufferUtils.fit_bytearray;\nconst buffer_to_uint = bufferUtils.buffer_to_uint;\nconst uint_to_buffer = bufferUtils.uint_to_buffer;\n\nclass MosaicBuffer {\n    getMosaicid = () => {\n        return this.mosaicId;\n    }\n\n    setMosaicid = (mosaicId) => {\n        this.mosaicId = mosaicId;\n    }\n\n    getAmount = () => {\n        return this.amount;\n    }\n\n    setAmount = (amount) => {\n        this.amount = amount;\n    }\n\n    static loadFromBinary(consumableBuffer) {\n        var object = new MosaicBuffer();\n        var mosaicId = consumableBuffer.get_bytes(8);\n        object.mosaicId = mosaicId;\n        var amount = consumableBuffer.get_bytes(8);\n        object.amount = amount;\n        return object;\n    }\n\n    serialize = () => {\n        var newArray = new Uint8Array();\n        var fitArraymosaicId = fit_bytearray(this.mosaicId, 8);\n        newArray = concat_typedarrays(newArray, fitArraymosaicId);\n        var fitArrayamount = fit_bytearray(this.amount, 8);\n        newArray = concat_typedarrays(newArray, fitArrayamount);\n        return newArray;\n    }\n\n}\n\nclass SizePrefixedEntityBuffer {\n    getSize = () => {\n        return this.size;\n    }\n\n    setSize = (size) => {\n        this.size = size;\n    }\n\n    static loadFromBinary(consumableBuffer) {\n        var object = new SizePrefixedEntityBuffer();\n        var size = consumableBuffer.get_bytes(4);\n        object.size = size;\n        return object;\n    }\n\n    serialize = () => {\n        var newArray = new Uint8Array();\n        var fitArraysize = fit_bytearray(this.size, 4);\n        newArray = concat_typedarrays(newArray, fitArraysize);\n        return newArray;\n    }\n\n}\n\nclass VerifiableEntityBuffer {\n    getSignature = () => {\n        return this.signature;\n    }\n\n    setSignature = (signature) => {\n        this.signature = signature;\n    }\n\n    static loadFromBinary(consumableBuffer) {\n        var object = new VerifiableEntityBuffer();\n        var signature = consumableBuffer.get_bytes(64);\n        object.signature = signature;\n        return object;\n    }\n\n    serialize = () => {\n        var newArray = new Uint8Array();\n        var fitArraysignature = fit_bytearray(this.signature, 64);\n        newArray = concat_typedarrays(newArray, fitArraysignature);\n        return newArray;\n    }\n\n}\n\nclass EntityBodyBuffer {\n    getSigner = () => {\n        return this.signer;\n    }\n\n    setSigner = (signer) => {\n        this.signer = signer;\n    }\n\n    getVersion = () => {\n        return this.version;\n    }\n\n    setVersion = (version) => {\n        this.version = version;\n    }\n\n    getType = () => {\n        return this.type;\n    }\n\n    setType = (type) => {\n        this.type = type;\n    }\n\n    static loadFromBinary(consumableBuffer) {\n        var object = new EntityBodyBuffer();\n        var signer = consumableBuffer.get_bytes(32);\n        object.signer = signer;\n        var version = consumableBuffer.get_bytes(2);\n        object.version = version;\n        var type = consumableBuffer.get_bytes(2);\n        object.type = type;\n        return object;\n    }\n\n    serialize = () => {\n        var newArray = new Uint8Array();\n        var fitArraysigner = fit_bytearray(this.signer, 32);\n        newArray = concat_typedarrays(newArray, fitArraysigner);\n        var fitArrayversion = fit_bytearray(this.version, 2);\n        newArray = concat_typedarrays(newArray, fitArrayversion);\n        var fitArraytype = fit_bytearray(this.type, 2);\n        newArray = concat_typedarrays(newArray, fitArraytype);\n        return newArray;\n    }\n\n}\n\nmodule.exports = {\n    MosaicBuffer,\n    SizePrefixedEntityBuffer,\n    VerifiableEntityBuffer,\n    EntityBodyBuffer,\n}"]}