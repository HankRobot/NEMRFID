{"version":3,"sources":["../../src/buffers/TransactionBuffer.js"],"names":["concat_typedarrays","bufferUtils","fit_bytearray","buffer_to_uint","uint_to_buffer","TransactionBuffer","getSize","size","setSize","getSignature","signature","setSignature","getSigner","signer","setSigner","getVersion","version","setVersion","getType","type","setType","getFee","fee","setFee","getDeadline","deadline","setDeadline","serialize","newArray","Uint8Array","fitArraysize","fitArraysignature","fitArraysigner","fitArrayversion","fitArraytype","fitArrayfee","fitArraydeadline","consumableBuffer","object","get_bytes","EmbeddedTransactionBuffer","module","exports","main","embedded"],"mappings":"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","file":"TransactionBuffer.js","sourcesContent":["/*\n * Copyright 2019 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport bufferUtils from './BufferUtils';\n\nconst concat_typedarrays = bufferUtils.concat_typedarrays;\nconst fit_bytearray = bufferUtils.fit_bytearray;\nconst buffer_to_uint = bufferUtils.buffer_to_uint;\nconst uint_to_buffer = bufferUtils.uint_to_buffer;\n\nclass TransactionBuffer {\n    getSize = () => {\n        return this.size\n    }\n\n    setSize = (size) => {\n        this.size = size\n    }\n\n    getSignature = () => {\n        return this.signature\n    }\n\n    setSignature = (signature) => {\n        this.signature = signature\n    }\n\n    getSigner = () => {\n        return this.signer\n    }\n\n    setSigner = (signer) => {\n        this.signer = signer\n    }\n\n    getVersion = () => {\n        return this.version\n    }\n\n    setVersion = (version) => {\n        this.version = version\n    }\n\n    getType = () => {\n        return this.type\n    }\n\n    setType = (type) => {\n        this.type = type\n    }\n\n    getFee = () => {\n        return this.fee\n    }\n\n    setFee = (fee) => {\n        this.fee = fee\n    }\n\n    getDeadline = () => {\n        return this.deadline\n    }\n\n    setDeadline = (deadline) => {\n        this.deadline = deadline\n    }\n\n    static loadFromBinary(consumableBuffer) {\n        var object = new TransactionBuffer()\n        var size = consumableBuffer.get_bytes(4)\n        object.size = size\n        var signature = consumableBuffer.get_bytes(64)\n        object.signature = signature\n        var signer = consumableBuffer.get_bytes(32)\n        object.signer = signer\n        var version = consumableBuffer.get_bytes(2)\n        object.version = version\n        var type = consumableBuffer.get_bytes(2)\n        object.type = type\n        var fee = consumableBuffer.get_bytes(8)\n        object.fee = fee\n        var deadline = consumableBuffer.get_bytes(8)\n        object.deadline = deadline\n        return object\n    }\n\n    serialize = () => {\n        var newArray = new Uint8Array()\n        var fitArraysize = fit_bytearray(this.size, 4)\n        newArray = concat_typedarrays(newArray, fitArraysize)\n        var fitArraysignature = fit_bytearray(this.signature, 64)\n        newArray = concat_typedarrays(newArray, fitArraysignature)\n        var fitArraysigner = fit_bytearray(this.signer, 32)\n        newArray = concat_typedarrays(newArray, fitArraysigner)\n        var fitArrayversion = fit_bytearray(this.version, 2)\n        newArray = concat_typedarrays(newArray, fitArrayversion)\n        var fitArraytype = fit_bytearray(this.type, 2)\n        newArray = concat_typedarrays(newArray, fitArraytype)\n        var fitArrayfee = fit_bytearray(this.fee, 8)\n        newArray = concat_typedarrays(newArray, fitArrayfee)\n        var fitArraydeadline = fit_bytearray(this.deadline, 8)\n        newArray = concat_typedarrays(newArray, fitArraydeadline)\n        return newArray\n    }\n\n}\n\nclass EmbeddedTransactionBuffer {\n    getSize = () => {\n        return this.size\n    }\n\n    setSize = (size) => {\n        this.size = size\n    }\n\n    getSigner = () => {\n        return this.signer\n    }\n\n    setSigner = (signer) => {\n        this.signer = signer\n    }\n\n    getVersion = () => {\n        return this.version\n    }\n\n    setVersion = (version) => {\n        this.version = version\n    }\n\n    getType = () => {\n        return this.type\n    }\n\n    setType = (type) => {\n        this.type = type\n    }\n\n    static loadFromBinary(consumableBuffer) {\n        var object = new EmbeddedTransactionBuffer()\n        var size = consumableBuffer.get_bytes(4)\n        object.size = size\n        var signer = consumableBuffer.get_bytes(32)\n        object.signer = signer\n        var version = consumableBuffer.get_bytes(2)\n        object.version = version\n        var type = consumableBuffer.get_bytes(2)\n        object.type = type\n        return object\n    }\n\n    serialize = () => {\n        var newArray = new Uint8Array()\n        var fitArraysize = fit_bytearray(this.size, 4)\n        newArray = concat_typedarrays(newArray, fitArraysize)\n        var fitArraysigner = fit_bytearray(this.signer, 32)\n        newArray = concat_typedarrays(newArray, fitArraysigner)\n        var fitArrayversion = fit_bytearray(this.version, 2)\n        newArray = concat_typedarrays(newArray, fitArrayversion)\n        var fitArraytype = fit_bytearray(this.type, 2)\n        newArray = concat_typedarrays(newArray, fitArraytype)\n        return newArray\n    }\n\n}\n\nmodule.exports = {\n    main : TransactionBuffer,\n    embedded : EmbeddedTransactionBuffer,\n};"]}