'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*
opyright 2019 NEM

icensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

nless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
ee the License for the specific language governing permissions and
limitations under the License.


var _BufferUtils = require('./BufferUtils');

var _BufferUtils2 = _interopRequireDefault(_BufferUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var concat_typedarrays = _BufferUtils2.default.concat_typedarrays;
var fit_bytearray = _BufferUtils2.default.fit_bytearray;
var buffer_to_uint = _BufferUtils2.default.buffer_to_uint;
var uint_to_buffer = _BufferUtils2.default.uint_to_buffer;

var MosaicBuffer = function () {
    function MosaicBuffer() {
        var _this = this;

        _classCallCheck(this, MosaicBuffer);

        this.getMosaicid = function () {
            return _this.mosaicId;
        };

        this.setMosaicid = function (mosaicId) {
            _this.mosaicId = mosaicId;
        };

        this.getAmount = function () {
            return _this.amount;
        };

        this.setAmount = function (amount) {
            _this.amount = amount;
        };

        this.serialize = function () {
            var newArray = new Uint8Array();
            var fitArraymosaicId = fit_bytearray(_this.mosaicId, 8);
            newArray = concat_typedarrays(newArray, fitArraymosaicId);
            var fitArrayamount = fit_bytearray(_this.amount, 8);
            newArray = concat_typedarrays(newArray, fitArrayamount);
            return newArray;
        };
    }

    _createClass(MosaicBuffer, null, [{
        key: 'loadFromBinary',
        value: function loadFromBinary(consumableBuffer) {
            var object = new MosaicBuffer();
            var mosaicId = consumableBuffer.get_bytes(8);
            object.mosaicId = mosaicId;
            var amount = consumableBuffer.get_bytes(8);
            object.amount = amount;
            return object;
        }
    }]);

    return MosaicBuffer;
}();

var SizePrefixedEntityBuffer = function () {
    function SizePrefixedEntityBuffer() {
        var _this2 = this;

        _classCallCheck(this, SizePrefixedEntityBuffer);

        this.getSize = function () {
            return _this2.size;
        };

        this.setSize = function (size) {
            _this2.size = size;
        };

        this.serialize = function () {
            var newArray = new Uint8Array();
            var fitArraysize = fit_bytearray(_this2.size, 4);
            newArray = concat_typedarrays(newArray, fitArraysize);
            return newArray;
        };
    }

    _createClass(SizePrefixedEntityBuffer, null, [{
        key: 'loadFromBinary',
        value: function loadFromBinary(consumableBuffer) {
            var object = new SizePrefixedEntityBuffer();
            var size = consumableBuffer.get_bytes(4);
            object.size = size;
            return object;
        }
    }]);

    return SizePrefixedEntityBuffer;
}();

var VerifiableEntityBuffer = function () {
    function VerifiableEntityBuffer() {
        var _this3 = this;

        _classCallCheck(this, VerifiableEntityBuffer);

        this.getSignature = function () {
            return _this3.signature;
        };

        this.setSignature = function (signature) {
            _this3.signature = signature;
        };

        this.serialize = function () {
            var newArray = new Uint8Array();
            var fitArraysignature = fit_bytearray(_this3.signature, 64);
            newArray = concat_typedarrays(newArray, fitArraysignature);
            return newArray;
        };
    }

    _createClass(VerifiableEntityBuffer, null, [{
        key: 'loadFromBinary',
        value: function loadFromBinary(consumableBuffer) {
            var object = new VerifiableEntityBuffer();
            var signature = consumableBuffer.get_bytes(64);
            object.signature = signature;
            return object;
        }
    }]);

    return VerifiableEntityBuffer;
}();

var EntityBodyBuffer = function () {
    function EntityBodyBuffer() {
        var _this4 = this;

        _classCallCheck(this, EntityBodyBuffer);

        this.getSigner = function () {
            return _this4.signer;
        };

        this.setSigner = function (signer) {
            _this4.signer = signer;
        };

        this.getVersion = function () {
            return _this4.version;
        };

        this.setVersion = function (version) {
            _this4.version = version;
        };

        this.getType = function () {
            return _this4.type;
        };

        this.setType = function (type) {
            _this4.type = type;
        };

        this.serialize = function () {
            var newArray = new Uint8Array();
            var fitArraysigner = fit_bytearray(_this4.signer, 32);
            newArray = concat_typedarrays(newArray, fitArraysigner);
            var fitArrayversion = fit_bytearray(_this4.version, 2);
            newArray = concat_typedarrays(newArray, fitArrayversion);
            var fitArraytype = fit_bytearray(_this4.type, 2);
            newArray = concat_typedarrays(newArray, fitArraytype);
            return newArray;
        };
    }

    _createClass(EntityBodyBuffer, null, [{
        key: 'loadFromBinary',
        value: function loadFromBinary(consumableBuffer) {
            var object = new EntityBodyBuffer();
            var signer = consumableBuffer.get_bytes(32);
            object.signer = signer;
            var version = consumableBuffer.get_bytes(2);
            object.version = version;
            var type = consumableBuffer.get_bytes(2);
            object.type = type;
            return object;
        }
    }]);

    return EntityBodyBuffer;
}();

module.exports = {
    MosaicBuffer: MosaicBuffer,
    SizePrefixedEntityBuffer: SizePrefixedEntityBuffer,
    VerifiableEntityBuffer: VerifiableEntityBuffer,
    EntityBodyBuffer: EntityBodyBuffer
};
//# sourceMappingURL=CommonBuffer.js.map