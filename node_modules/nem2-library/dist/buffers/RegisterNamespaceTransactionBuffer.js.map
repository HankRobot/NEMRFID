{"version":3,"sources":["../../src/buffers/RegisterNamespaceTransactionBuffer.js"],"names":["concat_typedarrays","bufferUtils","fit_bytearray","buffer_to_uint","uint_to_buffer","NamespaceType","Object","freeze","NamespaceTypeSize","returnBytes_by_namespaceType","namespaceType","duration","parentid","object","root","binary","byteSize","child","Uint8Array","of","getBytes_by_namespaceType","consumableBuffer","get_bytes","RegisterNamespaceTransactionBodyBuffer","getNamespacetype","setNamespacetype","getDuration","setDuration","getParentid","parentId","setParentid","getNamespaceid","namespaceId","setNamespaceid","getName","name","setName","serialize","newArray","fitArraynamespaceType","dynamicField","fitArrayDynamicField","fitArraynamespaceId","length","namespaceNameSize","RegisterNamespaceTransactionBuffer","getSize","size","setSize","getSignature","signature","setSignature","getSigner","signer","setSigner","getVersion","version","setVersion","getType","type","setType","getFee","fee","setFee","getDeadline","deadline","setDeadline","fitArraysize","fitArraysignature","fitArraysigner","fitArrayversion","fitArraytype","fitArrayfee","fitArraydeadline","EmbeddedRegisterNamespaceTransactionBuffer","module","exports","embedded","main","body"],"mappings":"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","file":"RegisterNamespaceTransactionBuffer.js","sourcesContent":["/*\n * Copyright 2019 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport bufferUtils from './BufferUtils';\n\nconst concat_typedarrays = bufferUtils.concat_typedarrays;\nconst fit_bytearray = bufferUtils.fit_bytearray;\nconst buffer_to_uint = bufferUtils.buffer_to_uint;\nconst uint_to_buffer = bufferUtils.uint_to_buffer;\n\nconst NamespaceType = Object.freeze({\"root\":0, \"child\":1})\nconst NamespaceTypeSize = Object.freeze({\"duration\": 8, \"parentid\": 8})\n\nconst returnBytes_by_namespaceType = (namespaceType, duration, parentid) => {\n\n    var object = {};\n\n    switch(buffer_to_uint(namespaceType)){\n        case NamespaceType.root:\n            object.binary = duration;\n            object.byteSize = NamespaceTypeSize.duration;\n            break;\n        case NamespaceType.child:\n            object.binary = parentid;\n            object.byteSize = NamespaceTypeSize.parentid;\n            break;\n        default:\n            object.binary = Uint8Array.of([0]);\n            object.byteSize = 0;\n            break;\n    }\n\n    return object;\n}\n\nconst getBytes_by_namespaceType = (namespaceType, consumableBuffer) => {\n\n    switch(buffer_to_uint(namespaceType)){\n        case NamespaceType.root:\n            return consumableBuffer.get_bytes(NamespaceTypeSize.duration);\n            break;\n        case NamespaceType.child:\n            return consumableBuffer.get_bytes(NamespaceTypeSize.parentid);\n            break;\n        default:\n            return null;\n            break;\n    }\n}\n\nclass RegisterNamespaceTransactionBodyBuffer {\n    getNamespacetype = () => {\n        return this.namespaceType\n    }\n\n    setNamespacetype = (namespaceType) => {\n        this.namespaceType = namespaceType\n    }\n\n    getDuration = () => {\n        return this.duration\n    }\n\n    setDuration = (duration) => {\n        this.duration = duration\n    }\n\n    getParentid = () => {\n        return this.parentId\n    }\n\n    setParentid = (parentId) => {\n        this.parentId = parentId\n    }\n\n    getNamespaceid = () => {\n        return this.namespaceId\n    }\n\n    setNamespaceid = (namespaceId) => {\n        this.namespaceId = namespaceId\n    }\n\n    getName = () => {\n        return this.name\n    }\n\n    setName = (name) => {\n        this.name = name\n    }\n\n    static loadFromBinary(consumableBuffer) {\n        var object = new RegisterNamespaceTransactionBodyBuffer()\n        var namespaceType = consumableBuffer.get_bytes(1)\n        object.namespaceType = namespaceType\n        var dynamicField = getBytes_by_namespaceType(namespaceType, consumableBuffer)\n        switch(buffer_to_uint(namespaceType)){\n            case NamespaceType.root:\n                object.duration = dynamicField;\n                break;\n            case NamespaceType.child:\n                object.parentId = dynamicField;\n                break;\n        }\n        var namespaceId = consumableBuffer.get_bytes(8)\n        object.namespaceId = namespaceId\n        var namespaceNameSize = buffer_to_uint(consumableBuffer.get_bytes(1))\n        var name = consumableBuffer.get_bytes(namespaceNameSize)\n        object.name = name\n        return object\n    }\n\n    serialize = () => {\n        var newArray = new Uint8Array()\n        var fitArraynamespaceType = fit_bytearray(this.namespaceType, 1)\n        newArray = concat_typedarrays(newArray, fitArraynamespaceType)\n        var dynamicField = returnBytes_by_namespaceType(this.namespaceType, this.duration, this.parentId );\n        var fitArrayDynamicField = fit_bytearray(dynamicField.binary, dynamicField.byteSize)\n        newArray = concat_typedarrays(newArray, fitArrayDynamicField)\n        var fitArraynamespaceId = fit_bytearray(this.namespaceId, 8)\n        newArray = concat_typedarrays(newArray, fitArraynamespaceId)\n        newArray = concat_typedarrays(newArray, uint_to_buffer(this.name.length, 1))\n        newArray = concat_typedarrays(newArray, this.name)\n        return newArray\n    }\n\n}\n\nclass RegisterNamespaceTransactionBuffer {\n    getSize = () => {\n        return this.size\n    }\n\n    setSize = (size) => {\n        this.size = size\n    }\n\n    getSignature = () => {\n        return this.signature\n    }\n\n    setSignature = (signature) => {\n        this.signature = signature\n    }\n\n    getSigner = () => {\n        return this.signer\n    }\n\n    setSigner = (signer) => {\n        this.signer = signer\n    }\n\n    getVersion = () => {\n        return this.version\n    }\n\n    setVersion = (version) => {\n        this.version = version\n    }\n\n    getType = () => {\n        return this.type\n    }\n\n    setType = (type) => {\n        this.type = type\n    }\n\n    getFee = () => {\n        return this.fee\n    }\n\n    setFee = (fee) => {\n        this.fee = fee\n    }\n\n    getDeadline = () => {\n        return this.deadline\n    }\n\n    setDeadline = (deadline) => {\n        this.deadline = deadline\n    }\n\n    getNamespacetype = () => {\n        return this.namespaceType\n    }\n\n    setNamespacetype = (namespaceType) => {\n        this.namespaceType = namespaceType\n    }\n\n    getDuration = () => {\n        return this.duration\n    }\n\n    setDuration = (duration) => {\n        this.duration = duration\n    }\n\n    getParentid = () => {\n        return this.parentId\n    }\n\n    setParentid = (parentId) => {\n        this.parentId = parentId\n    }\n\n    getNamespaceid = () => {\n        return this.namespaceId\n    }\n\n    setNamespaceid = (namespaceId) => {\n        this.namespaceId = namespaceId\n    }\n\n    getName = () => {\n        return this.name\n    }\n\n    setName = (name) => {\n        this.name = name\n    }\n\n    static loadFromBinary(consumableBuffer) {\n        var object = new RegisterNamespaceTransactionBuffer()\n        var size = consumableBuffer.get_bytes(4)\n        object.size = size\n        var signature = consumableBuffer.get_bytes(64)\n        object.signature = signature\n        var signer = consumableBuffer.get_bytes(32)\n        object.signer = signer\n        var version = consumableBuffer.get_bytes(2)\n        object.version = version\n        var type = consumableBuffer.get_bytes(2)\n        object.type = type\n        var fee = consumableBuffer.get_bytes(8)\n        object.fee = fee\n        var deadline = consumableBuffer.get_bytes(8)\n        object.deadline = deadline\n        var namespaceType = consumableBuffer.get_bytes(1)\n        object.namespaceType = namespaceType\n        var dynamicField = getBytes_by_namespaceType(namespaceType, consumableBuffer)\n        switch(buffer_to_uint(namespaceType)){\n            case NamespaceType.root:\n                object.duration = dynamicField;\n                break;\n            case NamespaceType.child:\n                object.parentId = dynamicField;\n                break;\n        }\n        var namespaceId = consumableBuffer.get_bytes(8)\n        object.namespaceId = namespaceId\n        var namespaceNameSize = buffer_to_uint(consumableBuffer.get_bytes(1))\n        var name = consumableBuffer.get_bytes(namespaceNameSize)\n        object.name = name\n        return object\n    }\n\n    serialize = () => {\n        var newArray = new Uint8Array()\n        var fitArraysize = fit_bytearray(this.size, 4)\n        newArray = concat_typedarrays(newArray, fitArraysize)\n        var fitArraysignature = fit_bytearray(this.signature, 64)\n        newArray = concat_typedarrays(newArray, fitArraysignature)\n        var fitArraysigner = fit_bytearray(this.signer, 32)\n        newArray = concat_typedarrays(newArray, fitArraysigner)\n        var fitArrayversion = fit_bytearray(this.version, 2)\n        newArray = concat_typedarrays(newArray, fitArrayversion)\n        var fitArraytype = fit_bytearray(this.type, 2)\n        newArray = concat_typedarrays(newArray, fitArraytype)\n        var fitArrayfee = fit_bytearray(this.fee, 8)\n        newArray = concat_typedarrays(newArray, fitArrayfee)\n        var fitArraydeadline = fit_bytearray(this.deadline, 8)\n        newArray = concat_typedarrays(newArray, fitArraydeadline)\n        var fitArraynamespaceType = fit_bytearray(this.namespaceType, 1)\n        newArray = concat_typedarrays(newArray, fitArraynamespaceType)\n        var dynamicField = returnBytes_by_namespaceType(this.namespaceType, this.duration, this.parentId );\n        var fitArrayDynamicField = fit_bytearray(dynamicField.binary, dynamicField.byteSize)\n        newArray = concat_typedarrays(newArray, fitArrayDynamicField)\n        var fitArraynamespaceId = fit_bytearray(this.namespaceId, 8)\n        newArray = concat_typedarrays(newArray, fitArraynamespaceId)\n        newArray = concat_typedarrays(newArray, uint_to_buffer(this.name.length, 1))\n        newArray = concat_typedarrays(newArray, this.name)\n        return newArray\n    }\n\n}\n\nclass EmbeddedRegisterNamespaceTransactionBuffer {\n    getSize = () => {\n        return this.size\n    }\n\n    setSize = (size) => {\n        this.size = size\n    }\n\n    getSigner = () => {\n        return this.signer\n    }\n\n    setSigner = (signer) => {\n        this.signer = signer\n    }\n\n    getVersion = () => {\n        return this.version\n    }\n\n    setVersion = (version) => {\n        this.version = version\n    }\n\n    getType = () => {\n        return this.type\n    }\n\n    setType = (type) => {\n        this.type = type\n    }\n\n    getNamespacetype = () => {\n        return this.namespaceType\n    }\n\n    setNamespacetype = (namespaceType) => {\n        this.namespaceType = namespaceType\n    }\n\n    getDuration = () => {\n        return this.duration\n    }\n\n    setDuration = (duration) => {\n        this.duration = duration\n    }\n\n    getParentid = () => {\n        return this.parentId\n    }\n\n    setParentid = (parentId) => {\n        this.parentId = parentId\n    }\n\n    getNamespaceid = () => {\n        return this.namespaceId\n    }\n\n    setNamespaceid = (namespaceId) => {\n        this.namespaceId = namespaceId\n    }\n\n    getName = () => {\n        return this.name\n    }\n\n    setName = (name) => {\n        this.name = name\n    }\n\n    static loadFromBinary(consumableBuffer) {\n        var object = new EmbeddedRegisterNamespaceTransactionBuffer()\n        var size = consumableBuffer.get_bytes(4)\n        object.size = size\n        var signer = consumableBuffer.get_bytes(32)\n        object.signer = signer\n        var version = consumableBuffer.get_bytes(2)\n        object.version = version\n        var type = consumableBuffer.get_bytes(2)\n        object.type = type\n        var namespaceType = consumableBuffer.get_bytes(1)\n        object.namespaceType = namespaceType\n        var dynamicField = getBytes_by_namespaceType(namespaceType, consumableBuffer)\n        switch(buffer_to_uint(namespaceType)){\n            case NamespaceType.root:\n                object.duration = dynamicField;\n                break;\n            case NamespaceType.child:\n                object.parentId = dynamicField;\n                break;\n        }\n        var namespaceId = consumableBuffer.get_bytes(8)\n        object.namespaceId = namespaceId\n        var namespaceNameSize = buffer_to_uint(consumableBuffer.get_bytes(1))\n        var name = consumableBuffer.get_bytes(namespaceNameSize)\n        object.name = name\n        return object\n    }\n\n    serialize = () => {\n        var newArray = new Uint8Array()\n        var fitArraysize = fit_bytearray(this.size, 4)\n        newArray = concat_typedarrays(newArray, fitArraysize)\n        var fitArraysigner = fit_bytearray(this.signer, 32)\n        newArray = concat_typedarrays(newArray, fitArraysigner)\n        var fitArrayversion = fit_bytearray(this.version, 2)\n        newArray = concat_typedarrays(newArray, fitArrayversion)\n        var fitArraytype = fit_bytearray(this.type, 2)\n        newArray = concat_typedarrays(newArray, fitArraytype)\n        var fitArraynamespaceType = fit_bytearray(this.namespaceType, 1)\n        newArray = concat_typedarrays(newArray, fitArraynamespaceType)\n        var dynamicField = returnBytes_by_namespaceType(this.namespaceType, this.duration, this.parentId );\n        var fitArrayDynamicField = fit_bytearray(dynamicField.binary, dynamicField.byteSize)\n        newArray = concat_typedarrays(newArray, fitArrayDynamicField)\n        var fitArraynamespaceId = fit_bytearray(this.namespaceId, 8)\n        newArray = concat_typedarrays(newArray, fitArraynamespaceId)\n        newArray = concat_typedarrays(newArray, uint_to_buffer(this.name.length, 1))\n        newArray = concat_typedarrays(newArray, this.name)\n        return newArray\n    }\n\n}\n\nmodule.exports = {\n    embedded : EmbeddedRegisterNamespaceTransactionBuffer,\n    main : RegisterNamespaceTransactionBuffer,\n    body : RegisterNamespaceTransactionBodyBuffer,\n    NamespaceType\n};\n\n"]}