{"version":3,"sources":["../../src/buffers/Uint8ArrayConsumableBuffer.js"],"names":["Uint8ArrayConsumableBuffer","binary","get_bytes","count","offset","length","RangeError","bytes","slice"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;;;;;IAgBMA,0B,GACF,oCAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAAA,SAKpBC,SALoB,GAKR,UAACC,KAAD,EAAW;AACnB,YAAIA,QAAQ,MAAKC,MAAb,GAAsB,MAAKH,MAAL,CAAYI,MAAtC,EACI,MAAM,IAAIC,UAAJ,EAAN;AACJ,YAAIC,QAAQ,MAAKN,MAAL,CAAYO,KAAZ,CAAkB,MAAKJ,MAAvB,EAA+B,MAAKA,MAAL,GAAcD,KAA7C,CAAZ;AACA,cAAKC,MAAL,IAAeD,KAAf;AACA,eAAOI,KAAP;AACH,KAXmB;;AAChB,SAAKH,MAAL,GAAc,CAAd;AACA,SAAKH,MAAL,GAAcA,MAAd;AACH,C;;kBAYUD,0B","file":"Uint8ArrayConsumableBuffer.js","sourcesContent":["/*\n * Copyright 2019 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass Uint8ArrayConsumableBuffer {\n    constructor(binary) {\n        this.offset = 0;\n        this.binary = binary;\n    }\n\n    get_bytes = (count) => {\n        if (count + this.offset > this.binary.length)\n            throw new RangeError();\n        var bytes = this.binary.slice(this.offset, this.offset + count);\n        this.offset += count;\n        return bytes;\n    }\n\n}\n\nexport default Uint8ArrayConsumableBuffer;"]}