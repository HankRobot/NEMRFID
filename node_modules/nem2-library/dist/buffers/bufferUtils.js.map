{"version":3,"sources":["../../src/buffers/bufferUtils.js"],"names":["bufferUtils","uintArray","bufferSize","Uint8Array","buffer","Uint16Array","from","Uint32Array","bufferArray","data","uintArray_to_bufferArray","Array","bufferArray_to_uintArray","concat_typedarrays","array1","array2","newArray","length","set","fit_bytearray","array","size","fill","RangeError","buffer_to_uint","dataView","DataView","byteLength","getUint8","getUint16","getUint32","uint_to_buffer","uint","ArrayBuffer","setUint8","setUint16","setUint32"],"mappings":"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","file":"bufferUtils.js","sourcesContent":["/*\n * Copyright 2019 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass bufferUtils{\n\n    static concat_typedarrays = (array1, array2) => {\n        var newArray = new Uint8Array(array1.length + array2.length);\n        newArray.set(array1);\n        newArray.set(array2, array1.length);\n        return newArray;\n    }\n\n    static fit_bytearray = (array, size) => {\n        if (array == null) {\n            var newArray = new Uint8Array(size)\n            newArray.fill(0)\n            return newArray\n        }\n        if (array.length > size) {\n            throw new RangeError(\"Data size larger than allowed\")\n        }\n        else if (array.length < size) {\n            var newArray = new Uint8Array(size)\n            newArray.fill(0)\n            newArray.set(array, size - array.length)\n            return newArray\n        }\n        return array\n    }\n \n    static buffer_to_uint = (buffer) => {\n        var dataView = new DataView(buffer.buffer)\n        if (buffer.byteLength == 1)\n            return dataView.getUint8(0, true)\n        else if (buffer.byteLength == 2)\n            return dataView.getUint16(0, true)\n        else if (buffer.byteLength == 4)\n            return dataView.getUint32(0, true)\n    }\n    \n    static uint_to_buffer = (uint, bufferSize) => {\n        var buffer = new ArrayBuffer(bufferSize)\n        var dataView = new DataView(buffer)\n        if (bufferSize == 1)\n            dataView.setUint8(0, uint, true)\n        else if (bufferSize == 2)\n            dataView.setUint16(0, uint, true)\n        else if (bufferSize == 4)\n            dataView.setUint32(0, uint, true)\n        return new Uint8Array(buffer)\n    }\n\n    static uintArray_to_bufferArray(uintArray, bufferSize){\n        \n        if(bufferSize == 1){\n            return new Uint8Array((uintArray).buffer);  \n        }\n        else if(bufferSize == 2){\n            return new Uint8Array(Uint16Array.from(uintArray).buffer);\n        }\n        else if(bufferSize == 4){\n            return new Uint8Array(Uint32Array.from(uintArray).buffer);\n        }   \n    }\n\n    static bufferArray_to_uintArray(bufferArray, bufferSize){\n        \n        if(bufferSize == 1){\n            return new Uint8Array(bufferArray.buffer);  \n        }\n        else if(bufferSize == 2){\n            return new Uint16Array(bufferArray.buffer);\n        }\n        else if(bufferSize == 4){\n            return new Uint32Array(bufferArray.buffer);\n        }   \n    }\n\n    static uint32Array_to_bufferArray(data){\n        return this.uintArray_to_bufferArray( data , 4);\n    }\n\n    static bufferArray_to_uint32Array(data){\n        return Array.from(this.bufferArray_to_uintArray( data , 4));\n    }\n}\n\nexport default bufferUtils;"]}