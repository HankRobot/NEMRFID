"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/*
 * Copyright 2019 NEM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var PropertyModificationBuffer = function () {
    function PropertyModificationBuffer() {
        var _this = this;

        _classCallCheck(this, PropertyModificationBuffer);

        this.getModificationtype = function () {
            return _this.modificationType;
        };

        this.setModificationtype = function (modificationType) {
            _this.modificationType = modificationType;
        };

        this.serialize = function () {
            var newArray = new Uint8Array();
            var fitArraymodificationType = fit_bytearray(_this.modificationType, 1);
            newArray = concat_typedarrays(newArray, fitArraymodificationType);
            return newArray;
        };
    }

    _createClass(PropertyModificationBuffer, null, [{
        key: "loadFromBinary",
        value: function loadFromBinary(consumableBuffer) {
            var object = new PropertyModificationBuffer();
            var modificationType = consumableBuffer.get_bytes(1);
            object.modificationType = modificationType;
            return object;
        }
    }]);

    return PropertyModificationBuffer;
}();

exports.default = PropertyModificationBuffer;
//# sourceMappingURL=PropertyModificationBuffer.js.map