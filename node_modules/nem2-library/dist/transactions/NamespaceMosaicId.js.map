{"version":3,"sources":["../../src/transactions/NamespaceMosaicId.js"],"names":["mosaicId","generateRandomMosaicNonce","namespaceId","subnamespaceParentId","subnamespaceNamespaceId","nonce","ownerPublicId","IdGenerator","generateMosaicId","nacl","randomBytes","namespaceName","path","generateNamespacePath","length","parentNamespaceName"],"mappings":";;;;;QAmBgBA,Q,GAAAA,Q;QAIAC,yB,GAAAA,yB;QAIAC,W,GAAAA,W;QAKAC,oB,GAAAA,oB;QAKAC,uB,GAAAA,uB;;AArBhB;;;;AACA;;;;;;AAjBA;;;;;;;;;;;;;;;;AAmBO,SAASJ,QAAT,CAAkBK,KAAlB,EAAyBC,aAAzB,EAAwC;AAC9C,SAAOC,sBAAYC,gBAAZ,CAA6BH,KAA7B,EAAoCC,aAApC,CAAP;AACA;;AAEM,SAASL,yBAAT,GAAqC;AAC3C,SAAOQ,wBAAKC,WAAL,CAAiB,CAAjB,CAAP;AACA;;AAEM,SAASR,WAAT,CAAqBS,aAArB,EAAoC;AAC1C,MAAMC,OAAOL,sBAAYM,qBAAZ,CAAkCF,aAAlC,CAAb;AACA,SAAOC,KAAKE,MAAL,GAAcP,sBAAYM,qBAAZ,CAAkCF,aAAlC,EAAiDC,KAAKE,MAAL,GAAc,CAA/D,CAAd,GAAkF,EAAzF;AACA;;AAEM,SAASX,oBAAT,CAA8BY,mBAA9B,EAAmDJ,aAAnD,EAAkE;AACxE,MAAMC,OAAOL,sBAAYM,qBAAZ,CAAqCE,mBAArC,SAA4DJ,aAA5D,CAAb;AACA,SAAOJ,sBAAYM,qBAAZ,CAAkCE,mBAAlC,EAAuDH,KAAKE,MAAL,GAAc,CAArE,CAAP;AACA;;AAEM,SAASV,uBAAT,CAAiCW,mBAAjC,EAAsDJ,aAAtD,EAAqE;AAC3E,MAAMC,OAAOL,sBAAYM,qBAAZ,CAAqCE,mBAArC,SAA4DJ,aAA5D,CAAb;AACA,SAAOC,KAAKA,KAAKE,MAAL,GAAc,CAAnB,CAAP;AACA","file":"NamespaceMosaicId.js","sourcesContent":["/*\n * Copyright 2018 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport IdGenerator from '../coders/idGenerator';\nimport nacl from '../crypto/nacl_catapult';\n\nexport function mosaicId(nonce, ownerPublicId) {\n\treturn IdGenerator.generateMosaicId(nonce, ownerPublicId);\n}\n\nexport function generateRandomMosaicNonce() {\n\treturn nacl.randomBytes(4);\n}\n\nexport function namespaceId(namespaceName) {\n\tconst path = IdGenerator.generateNamespacePath(namespaceName);\n\treturn path.length ? IdGenerator.generateNamespacePath(namespaceName)[path.length - 1] : [];\n}\n\nexport function subnamespaceParentId(parentNamespaceName, namespaceName) {\n\tconst path = IdGenerator.generateNamespacePath(`${parentNamespaceName}.${namespaceName}`);\n\treturn IdGenerator.generateNamespacePath(parentNamespaceName)[path.length - 2];\n}\n\nexport function subnamespaceNamespaceId(parentNamespaceName, namespaceName) {\n\tconst path = IdGenerator.generateNamespacePath(`${parentNamespaceName}.${namespaceName}`);\n\treturn path[path.length - 1];\n}\n\n"]}