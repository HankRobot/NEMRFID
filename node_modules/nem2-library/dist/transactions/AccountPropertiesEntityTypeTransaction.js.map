{"version":3,"sources":["../../src/transactions/AccountPropertiesEntityTypeTransaction.js"],"names":["AccountPropertiesEntityTypeTransactionBufferPackage","Buffers","AccountPropertiesEntityTypeTransactionBuffer","PropertyEntityTypeModificationBuffer","require","flatbuffers","AccountPropertiesEntityTypeTransaction","Builder","fee","version","type","deadline","propertyType","modifications","builder","modificationsArray","forEach","startPropertyEntityTypeModificationBuffer","addModificationType","modification","modificationType","addValue","value","push","endPropertyEntityTypeModificationBuffer","signatureVector","createSignatureVector","Array","map","Number","prototype","valueOf","signerVector","createSignerVector","deadlineVector","createDeadlineVector","feeVector","createFeeVector","modificationVector","createModificationsVector","startAccountPropertiesEntityTypeTransactionBuffer","addSize","length","addSignature","addSigner","addVersion","addType","addFee","addDeadline","addPropertyType","addModificationCount","addModifications","codedAccountPropertiesAddress","endAccountPropertiesEntityTypeTransactionBuffer","finish","bytes","asUint8Array","AccountPropertiesEntityTypeModificationTransactionSchema","VerifiableTransaction"],"mappings":"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","file":"AccountPropertiesEntityTypeTransaction.js","sourcesContent":["/*\n * Copyright 2019 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module transactions/AccountPropertiesEntityTypeTransaction\n */\nimport VerifiableTransaction from './VerifiableTransaction';\nimport AccountPropertiesEntityTypeModificationTransactionSchema from '../schema/AccountPropertiesEntityTypeModificationTransactionSchema';\nimport AccountPropertiesEntityTypeTransactionBufferPackage from '../buffers/AccountPropertiesEntityTypeTransactionBuffer';\n\nconst {\n\tAccountPropertiesEntityTypeTransactionBuffer,\n\tPropertyEntityTypeModificationBuffer\n} = AccountPropertiesEntityTypeTransactionBufferPackage.Buffers;\n\nconst { flatbuffers } = require('flatbuffers');\n\nexport default class AccountPropertiesEntityTypeTransaction extends VerifiableTransaction {\n\tstatic get Builder() {\n\t\tclass Builder {\n\t\t\tconstructor() {\n\t\t\t\tthis.fee = [0, 0];\n\t\t\t\tthis.version = 36865;\n\t\t\t\tthis.type = 0x4350;\n\t\t\t}\n\n\t\t\taddFee(fee) {\n\t\t\t\tthis.fee = fee;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddVersion(version) {\n\t\t\t\tthis.version = version;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddType(type) {\n\t\t\t\tthis.type = type;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddDeadline(deadline) {\n\t\t\t\tthis.deadline = deadline;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddPropertyType(propertyType) {\n\t\t\t\tthis.propertyType = propertyType;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddModifications(modifications) {\n\t\t\t\tthis.modifications = modifications;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tbuild() {\n\t\t\t\tconst builder = new flatbuffers.Builder(1);\n\n\t\t\t\t// Create modifications\n\t\t\t\tconst modificationsArray = [];\n\t\t\t\tthis.modifications.forEach(modification => {\n\t\t\t\t\tPropertyEntityTypeModificationBuffer.startPropertyEntityTypeModificationBuffer(builder);\n\t\t\t\t\tPropertyEntityTypeModificationBuffer.addModificationType(builder, modification.modificationType);\n\t\t\t\t\tPropertyEntityTypeModificationBuffer.addValue(builder, modification.value);\n\t\t\t\t\tmodificationsArray.push(PropertyEntityTypeModificationBuffer.endPropertyEntityTypeModificationBuffer(builder));\n\t\t\t\t});\n\n\t\t\t\t// Create vectors\n\t\t\t\tconst signatureVector = AccountPropertiesEntityTypeTransactionBuffer\n\t\t\t\t\t.createSignatureVector(builder, Array(...Array(64)).map(Number.prototype.valueOf, 0));\n\t\t\t\tconst signerVector = AccountPropertiesEntityTypeTransactionBuffer\n\t\t\t\t\t.createSignerVector(builder, Array(...Array(32)).map(Number.prototype.valueOf, 0));\n\t\t\t\tconst deadlineVector = AccountPropertiesEntityTypeTransactionBuffer\n\t\t\t\t\t.createDeadlineVector(builder, this.deadline);\n\t\t\t\tconst feeVector = AccountPropertiesEntityTypeTransactionBuffer\n\t\t\t\t\t.createFeeVector(builder, this.fee);\n\t\t\t\tconst modificationVector = AccountPropertiesEntityTypeTransactionBuffer\n\t\t\t\t\t.createModificationsVector(builder, modificationsArray);\n\n\n\t\t\t\tAccountPropertiesEntityTypeTransactionBuffer.startAccountPropertiesEntityTypeTransactionBuffer(builder);\n\t\t\t\tAccountPropertiesEntityTypeTransactionBuffer.addSize(builder, 122 + (3 * this.modifications.length));\n\t\t\t\tAccountPropertiesEntityTypeTransactionBuffer.addSignature(builder, signatureVector);\n\t\t\t\tAccountPropertiesEntityTypeTransactionBuffer.addSigner(builder, signerVector);\n\t\t\t\tAccountPropertiesEntityTypeTransactionBuffer.addVersion(builder, this.version);\n\t\t\t\tAccountPropertiesEntityTypeTransactionBuffer.addType(builder, this.type);\n\t\t\t\tAccountPropertiesEntityTypeTransactionBuffer.addFee(builder, feeVector);\n\t\t\t\tAccountPropertiesEntityTypeTransactionBuffer.addDeadline(builder, deadlineVector);\n\t\t\t\tAccountPropertiesEntityTypeTransactionBuffer.addPropertyType(builder, this.propertyType);\n\t\t\t\tAccountPropertiesEntityTypeTransactionBuffer.addModificationCount(builder, this.modifications.length);\n\t\t\t\tAccountPropertiesEntityTypeTransactionBuffer.addModifications(builder, modificationVector);\n\n\t\t\t\t// Calculate size\n\t\t\t\tconst codedAccountPropertiesAddress = AccountPropertiesEntityTypeTransactionBuffer\n\t\t\t\t\t.endAccountPropertiesEntityTypeTransactionBuffer(builder);\n\t\t\t\tbuilder.finish(codedAccountPropertiesAddress);\n\n\t\t\t\tconst bytes = builder.asUint8Array();\n\n\t\t\t\treturn new AccountPropertiesEntityTypeTransaction(bytes, AccountPropertiesEntityTypeModificationTransactionSchema);\n\t\t\t}\n\t\t}\n\n\t\treturn Builder;\n\t}\n}\n"]}