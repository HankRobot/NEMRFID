{"version":3,"sources":["../../src/transactions/AccountPropertiesMosaicTransaction.js"],"names":["AccountPropertiesMosaicTransactionBufferPackage","Buffers","AccountPropertiesMosaicTransactionBuffer","PropertyMosaicModificationBuffer","require","flatbuffers","AccountPropertiesMosaicTransaction","Builder","fee","version","type","deadline","propertyType","modifications","builder","modificationsArray","forEach","addressModificationVector","createValueVector","modification","value","startPropertyMosaicModificationBuffer","addModificationType","modificationType","addValue","push","endPropertyMosaicModificationBuffer","signatureVector","createSignatureVector","Array","map","Number","prototype","valueOf","signerVector","createSignerVector","deadlineVector","createDeadlineVector","feeVector","createFeeVector","modificationVector","createModificationsVector","startAccountPropertiesMosaicTransactionBuffer","addSize","length","addSignature","addSigner","addVersion","addType","addFee","addDeadline","addPropertyType","addModificationCount","addModifications","codedAccountPropertiesMosaic","endAccountPropertiesMosaicTransactionBuffer","finish","bytes","asUint8Array","AccountPropertiesMosaicModificationTransactionSchema","VerifiableTransaction"],"mappings":"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","file":"AccountPropertiesMosaicTransaction.js","sourcesContent":["/*\n * Copyright 2019 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module transactions/AccountPropertiesMosaicTransaction\n */\nimport VerifiableTransaction from './VerifiableTransaction';\nimport AccountPropertiesMosaicModificationTransactionSchema from '../schema/AccountPropertiesMosaicModificationTransactionSchema';\nimport AccountPropertiesMosaicTransactionBufferPackage from '../buffers/AccountPropertiesMosaicTransactionBuffer';\n\nconst {\n\tAccountPropertiesMosaicTransactionBuffer,\n\tPropertyMosaicModificationBuffer\n} = AccountPropertiesMosaicTransactionBufferPackage.Buffers;\n\nconst { flatbuffers } = require('flatbuffers');\n\nexport default class AccountPropertiesMosaicTransaction extends VerifiableTransaction {\n\tstatic get Builder() {\n\t\tclass Builder {\n\t\t\tconstructor() {\n\t\t\t\tthis.fee = [0, 0];\n\t\t\t\tthis.version = 36865;\n\t\t\t\tthis.type = 0x4250;\n\t\t\t}\n\n\t\t\taddFee(fee) {\n\t\t\t\tthis.fee = fee;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddVersion(version) {\n\t\t\t\tthis.version = version;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddType(type) {\n\t\t\t\tthis.type = type;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddDeadline(deadline) {\n\t\t\t\tthis.deadline = deadline;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddPropertyType(propertyType) {\n\t\t\t\tthis.propertyType = propertyType;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddModifications(modifications) {\n\t\t\t\tthis.modifications = modifications;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tbuild() {\n\t\t\t\tconst builder = new flatbuffers.Builder(1);\n\n\t\t\t\t// Create modifications\n\t\t\t\tconst modificationsArray = [];\n\t\t\t\tthis.modifications.forEach(modification => {\n\t\t\t\t\tconst addressModificationVector = PropertyMosaicModificationBuffer\n\t\t\t\t\t\t.createValueVector(builder, modification.value);\n\t\t\t\t\tPropertyMosaicModificationBuffer.startPropertyMosaicModificationBuffer(builder);\n\t\t\t\t\tPropertyMosaicModificationBuffer.addModificationType(builder, modification.modificationType);\n\t\t\t\t\tPropertyMosaicModificationBuffer.addValue(builder, addressModificationVector);\n\t\t\t\t\tmodificationsArray.push(PropertyMosaicModificationBuffer.endPropertyMosaicModificationBuffer(builder));\n\t\t\t\t});\n\n\t\t\t\t// Create vectors\n\t\t\t\tconst signatureVector = AccountPropertiesMosaicTransactionBuffer\n\t\t\t\t\t.createSignatureVector(builder, Array(...Array(64)).map(Number.prototype.valueOf, 0));\n\t\t\t\tconst signerVector = AccountPropertiesMosaicTransactionBuffer\n\t\t\t\t\t.createSignerVector(builder, Array(...Array(32)).map(Number.prototype.valueOf, 0));\n\t\t\t\tconst deadlineVector = AccountPropertiesMosaicTransactionBuffer\n\t\t\t\t\t.createDeadlineVector(builder, this.deadline);\n\t\t\t\tconst feeVector = AccountPropertiesMosaicTransactionBuffer\n\t\t\t\t\t.createFeeVector(builder, this.fee);\n\t\t\t\tconst modificationVector = AccountPropertiesMosaicTransactionBuffer\n\t\t\t\t\t.createModificationsVector(builder, modificationsArray);\n\n\n\t\t\t\tAccountPropertiesMosaicTransactionBuffer.startAccountPropertiesMosaicTransactionBuffer(builder);\n\t\t\t\tAccountPropertiesMosaicTransactionBuffer.addSize(builder, 122 + (9 * this.modifications.length));\n\t\t\t\tAccountPropertiesMosaicTransactionBuffer.addSignature(builder, signatureVector);\n\t\t\t\tAccountPropertiesMosaicTransactionBuffer.addSigner(builder, signerVector);\n\t\t\t\tAccountPropertiesMosaicTransactionBuffer.addVersion(builder, this.version);\n\t\t\t\tAccountPropertiesMosaicTransactionBuffer.addType(builder, this.type);\n\t\t\t\tAccountPropertiesMosaicTransactionBuffer.addFee(builder, feeVector);\n\t\t\t\tAccountPropertiesMosaicTransactionBuffer.addDeadline(builder, deadlineVector);\n\t\t\t\tAccountPropertiesMosaicTransactionBuffer.addPropertyType(builder, this.propertyType);\n\t\t\t\tAccountPropertiesMosaicTransactionBuffer.addModificationCount(builder, this.modifications.length);\n\t\t\t\tAccountPropertiesMosaicTransactionBuffer.addModifications(builder, modificationVector);\n\n\t\t\t\t// Calculate size\n\t\t\t\tconst codedAccountPropertiesMosaic = AccountPropertiesMosaicTransactionBuffer.endAccountPropertiesMosaicTransactionBuffer(builder);\n\t\t\t\tbuilder.finish(codedAccountPropertiesMosaic);\n\n\t\t\t\tconst bytes = builder.asUint8Array();\n\n\n\t\t\t\treturn new AccountPropertiesMosaicTransaction(bytes, AccountPropertiesMosaicModificationTransactionSchema);\n\t\t\t}\n\t\t}\n\n\t\treturn Builder;\n\t}\n}\n"]}