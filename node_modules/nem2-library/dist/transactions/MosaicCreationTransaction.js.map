{"version":3,"sources":["../../src/transactions/MosaicCreationTransaction.js"],"names":["require","flatbuffers","MosaicCreationTransactionBuffer","MosaicCreationTransactionBufferPackage","Buffers","MosaicCreationTransaction","Builder","flags","fee","version","type","nonce","deadline","duration","divisibility","mosaicId","builder","signatureVector","createSignatureVector","Array","map","Number","prototype","valueOf","signerVector","createSignerVector","deadlineVector","createDeadlineVector","feeVector","createFeeVector","nonceVector","createNonceVector","mosaicIdVector","createMosaicIdVector","durationVector","createDurationVector","durationProvided","length","startMosaicCreationTransactionBuffer","addSize","addSignature","addSigner","addVersion","addType","addFee","addDeadline","addNonce","addMosaicId","addNumOptionalProperties","addFlags","addDivisibility","addIndicateDuration","addDuration","codedMosaicCreation","endMosaicCreationTransactionBuffer","finish","bytes","asUint8Array","schema","MosaicCreationTransactionSchema","MosaicCreationTransactionSchemaNoDuration","VerifiableTransaction"],"mappings":"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","file":"MosaicCreationTransaction.js","sourcesContent":["/*\n * Copyright 2018 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module transactions/MosaicCreationTransaction\n */\nimport VerifiableTransaction from './VerifiableTransaction';\nimport { schema as MosaicCreationTransactionSchema,\n\tschemaNoDuration as MosaicCreationTransactionSchemaNoDuration } from '../schema/MosaicCreationTransactionSchema';\nimport MosaicCreationTransactionBufferPackage from '../buffers/MosaicCreationTransactionBuffer';\n\nconst { flatbuffers } = require('flatbuffers');\n\nconst { MosaicCreationTransactionBuffer } = MosaicCreationTransactionBufferPackage.Buffers;\n\nexport default class MosaicCreationTransaction extends VerifiableTransaction {\n\tstatic get Builder() {\n\t\tclass Builder {\n\t\t\tconstructor() {\n\t\t\t\tthis.flags = 0;\n\t\t\t\tthis.fee = [0, 0];\n\t\t\t\tthis.version = 36867;\n\t\t\t\tthis.type = 0x414d;\n\t\t\t\tthis.nonce = 0;\n\t\t\t}\n\n\t\t\taddFee(fee) {\n\t\t\t\tthis.fee = fee;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddVersion(version) {\n\t\t\t\tthis.version = version;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddType(type) {\n\t\t\t\tthis.type = type;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddNonce(nonce) {\n\t\t\t\tthis.nonce = nonce;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddDeadline(deadline) {\n\t\t\t\tthis.deadline = deadline;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddDuration(duration) {\n\t\t\t\tthis.duration = duration;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddDivisibility(divisibility) {\n\t\t\t\tthis.divisibility = divisibility;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddSupplyMutable() {\n\t\t\t\tthis.flags += 1;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddTransferability() {\n\t\t\t\tthis.flags += 2;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddLevyMutable() {\n\t\t\t\tthis.flags += 4;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddMosaicId(mosaicId) {\n\t\t\t\tthis.mosaicId = mosaicId;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tbuild() {\n\t\t\t\tconst builder = new flatbuffers.Builder(1);\n\n\t\t\t\t// Create vectors\n\t\t\t\tconst signatureVector = MosaicCreationTransactionBuffer\n\t\t\t\t\t.createSignatureVector(builder, Array(...Array(64)).map(Number.prototype.valueOf, 0));\n\t\t\t\tconst signerVector = MosaicCreationTransactionBuffer\n\t\t\t\t\t.createSignerVector(builder, Array(...Array(32)).map(Number.prototype.valueOf, 0));\n\t\t\t\tconst deadlineVector = MosaicCreationTransactionBuffer\n\t\t\t\t\t.createDeadlineVector(builder, this.deadline);\n\t\t\t\tconst feeVector = MosaicCreationTransactionBuffer\n\t\t\t\t\t.createFeeVector(builder, this.fee);\n\t\t\t\tconst nonceVector = MosaicCreationTransactionBuffer\n\t\t\t\t\t.createNonceVector(builder, this.nonce);\n\t\t\t\tconst mosaicIdVector = MosaicCreationTransactionBuffer\n\t\t\t\t\t.createMosaicIdVector(builder, this.mosaicId);\n\n\t\t\t\tconst durationVector = MosaicCreationTransactionBuffer\n\t\t\t\t\t.createDurationVector(builder, this.duration);\n\n\t\t\t\tconst durationProvided = 0 < this.duration.length;\n\n\t\t\t\tMosaicCreationTransactionBuffer.startMosaicCreationTransactionBuffer(builder);\n\t\t\t\tMosaicCreationTransactionBuffer.addSize(builder, durationProvided ? 144 : 135);\n\t\t\t\tMosaicCreationTransactionBuffer.addSignature(builder, signatureVector);\n\t\t\t\tMosaicCreationTransactionBuffer.addSigner(builder, signerVector);\n\t\t\t\tMosaicCreationTransactionBuffer.addVersion(builder, this.version);\n\t\t\t\tMosaicCreationTransactionBuffer.addType(builder, this.type);\n\t\t\t\tMosaicCreationTransactionBuffer.addFee(builder, feeVector);\n\t\t\t\tMosaicCreationTransactionBuffer.addDeadline(builder, deadlineVector);\n\t\t\t\tMosaicCreationTransactionBuffer.addNonce(builder, nonceVector);\n\t\t\t\tMosaicCreationTransactionBuffer.addMosaicId(builder, mosaicIdVector);\n\t\t\t\tMosaicCreationTransactionBuffer.addNumOptionalProperties(builder, durationProvided ? 1 : 0);\n\t\t\t\tMosaicCreationTransactionBuffer.addFlags(builder, this.flags);\n\n\t\t\t\tMosaicCreationTransactionBuffer.addDivisibility(builder, this.divisibility);\n\n\t\t\t\tif (durationProvided) {\n\t\t\t\t\tMosaicCreationTransactionBuffer.addIndicateDuration(builder, 2);\n\t\t\t\t\tMosaicCreationTransactionBuffer.addDuration(builder, durationVector);\n\t\t\t\t}\n\n\t\t\t\t// Calculate size\n\n\t\t\t\tconst codedMosaicCreation = MosaicCreationTransactionBuffer.endMosaicCreationTransactionBuffer(builder);\n\t\t\t\tbuilder.finish(codedMosaicCreation);\n\n\t\t\t\tconst bytes = builder.asUint8Array();\n\n\t\t\t\tconst schema = durationProvided ? MosaicCreationTransactionSchema : MosaicCreationTransactionSchemaNoDuration;\n\t\t\t\treturn new MosaicCreationTransaction(bytes, schema);\n\t\t\t}\n\t\t}\n\n\t\treturn Builder;\n\t}\n}\n"]}