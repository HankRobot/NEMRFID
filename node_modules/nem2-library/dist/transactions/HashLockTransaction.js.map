{"version":3,"sources":["../../src/transactions/HashLockTransaction.js"],"names":["HashLockTransactionBufferPackage","require","flatbuffers","HashLockTransactionBuffer","default","Buffers","HashLockTransaction","Builder","fee","version","type","deadline","mosaicId","mosaicAmount","duration","hash","builder","signatureVector","createSignatureVector","Array","map","Number","prototype","valueOf","signerVector","createSignerVector","deadlineVector","createDeadlineVector","feeVector","createFeeVector","mosaicIdVector","createMosaicIdVector","mosaicAmountVector","createMosaicAmountVector","durationVector","createDurationVector","byteHash","convert","hexToUint8","hashVector","createHashVector","startHashLockTransactionBuffer","addSize","addSignature","addSigner","addVersion","addType","addFee","addDeadline","addMosaicId","addMosaicAmount","addDuration","addHash","codedHashLock","endHashLockTransactionBuffer","finish","bytes","asUint8Array","HashLockTransactionSchema","VerifiableTransaction"],"mappings":"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","file":"HashLockTransaction.js","sourcesContent":["/*\n * Copyright 2018 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module transactions/HashLockTransaction\n */\nimport VerifiableTransaction from './VerifiableTransaction';\nimport * as HashLockTransactionBufferPackage from '../buffers/HashLockTransactionBuffer';\nimport HashLockTransactionSchema from '../schema/HashLockTransactionSchema';\nimport convert from '../coders/convert';\n\nconst { flatbuffers } = require('flatbuffers');\n\nconst { HashLockTransactionBuffer } = HashLockTransactionBufferPackage.default.Buffers;\n\nexport default class HashLockTransaction extends VerifiableTransaction {\n\tstatic get Builder() {\n\t\tclass Builder {\n\t\t\tconstructor() {\n\t\t\t\tthis.fee = [0, 0];\n\t\t\t\tthis.version = 36867;\n\t\t\t\tthis.type = 0x414C;\n\t\t\t}\n\n\t\t\taddFee(fee) {\n\t\t\t\tthis.fee = fee;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddVersion(version) {\n\t\t\t\tthis.version = version;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddType(type) {\n\t\t\t\tthis.type = type;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddDeadline(deadline) {\n\t\t\t\tthis.deadline = deadline;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddMosaicId(mosaicId) {\n\t\t\t\tthis.mosaicId = mosaicId;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddMosaicAmount(mosaicAmount) {\n\t\t\t\tthis.mosaicAmount = mosaicAmount;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddDuration(duration) {\n\t\t\t\tthis.duration = duration;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddHash(hash) {\n\t\t\t\tthis.hash = hash;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tbuild() {\n\t\t\t\tconst builder = new flatbuffers.Builder(1);\n\n\t\t\t\t// Create vectors\n\t\t\t\tconst signatureVector = HashLockTransactionBuffer\n\t\t\t\t\t.createSignatureVector(builder, Array(...Array(64)).map(Number.prototype.valueOf, 0));\n\t\t\t\tconst signerVector = HashLockTransactionBuffer.createSignerVector(builder, Array(...Array(32)).map(Number.prototype.valueOf, 0));\n\t\t\t\tconst deadlineVector = HashLockTransactionBuffer.createDeadlineVector(builder, this.deadline);\n\t\t\t\tconst feeVector = HashLockTransactionBuffer.createFeeVector(builder, this.fee);\n\t\t\t\tconst mosaicIdVector = HashLockTransactionBuffer.createMosaicIdVector(builder, this.mosaicId);\n\t\t\t\tconst mosaicAmountVector = HashLockTransactionBuffer.createMosaicAmountVector(builder, this.mosaicAmount);\n\t\t\t\tconst durationVector = HashLockTransactionBuffer.createDurationVector(builder, this.duration);\n\t\t\t\tconst byteHash = convert.hexToUint8(this.hash);\n\t\t\t\tconst hashVector = HashLockTransactionBuffer.createHashVector(builder, byteHash);\n\n\t\t\t\tHashLockTransactionBuffer.startHashLockTransactionBuffer(builder);\n\t\t\t\tHashLockTransactionBuffer.addSize(builder, 176);\n\t\t\t\tHashLockTransactionBuffer.addSignature(builder, signatureVector);\n\t\t\t\tHashLockTransactionBuffer.addSigner(builder, signerVector);\n\t\t\t\tHashLockTransactionBuffer.addVersion(builder, this.version);\n\t\t\t\tHashLockTransactionBuffer.addType(builder, this.type);\n\t\t\t\tHashLockTransactionBuffer.addFee(builder, feeVector);\n\t\t\t\tHashLockTransactionBuffer.addDeadline(builder, deadlineVector);\n\t\t\t\tHashLockTransactionBuffer.addMosaicId(builder, mosaicIdVector);\n\t\t\t\tHashLockTransactionBuffer.addMosaicAmount(builder, mosaicAmountVector);\n\t\t\t\tHashLockTransactionBuffer.addDuration(builder, durationVector);\n\t\t\t\tHashLockTransactionBuffer.addHash(builder, hashVector);\n\n\t\t\t\tconst codedHashLock = HashLockTransactionBuffer.endHashLockTransactionBuffer(builder);\n\t\t\t\tbuilder.finish(codedHashLock);\n\n\t\t\t\tconst bytes = builder.asUint8Array();\n\t\t\t\treturn new HashLockTransaction(bytes, HashLockTransactionSchema);\n\t\t\t}\n\t\t}\n\n\t\treturn Builder;\n\t}\n}\n"]}