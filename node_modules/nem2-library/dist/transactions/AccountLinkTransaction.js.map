{"version":3,"sources":["../../src/transactions/AccountLinkTransaction.js"],"names":["require","flatbuffers","AccountLinkTransactionBuffer","AccountLinkTransactionBufferPackage","Buffers","AccountLinkTransaction","Builder","fee","version","type","deadline","remoteAccountKey","convert","hexToUint8","linkAction","builder","signatureVector","createSignatureVector","Array","map","Number","prototype","valueOf","signerVector","createSignerVector","deadlineVector","createDeadlineVector","feeVector","createFeeVector","remoteAccountKeyVector","createRemoteAccountKeyVector","startAccountLinkTransactionBuffer","addSize","addSignature","addSigner","addVersion","addType","addFee","addDeadline","addRemoteAccountKey","addLinkAction","codedTransfer","endAccountLinkTransactionBuffer","finish","bytes","asUint8Array","AccountLinkTransactionSchema","VerifiableTransaction"],"mappings":"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","file":"AccountLinkTransaction.js","sourcesContent":["/*\n * Copyright 2019 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module transactions/AccountLinkTransaction\n */\nimport VerifiableTransaction from './VerifiableTransaction';\nimport AccountLinkTransactionBufferPackage from '../buffers/AccountLinkTransactionBuffer';\nimport AccountLinkTransactionSchema from '../schema/AccountLinkTransactionSchema';\nimport convert from '../coders/convert';\n\nconst { flatbuffers } = require('flatbuffers');\n\n\nconst { AccountLinkTransactionBuffer } = AccountLinkTransactionBufferPackage.Buffers;\n\nexport default class AccountLinkTransaction extends VerifiableTransaction {\n\tstatic get Builder() {\n\t\tclass Builder {\n\t\t\tconstructor() {\n\t\t\t\tthis.fee = [0, 0];\n\t\t\t\tthis.version = 36867;\n\t\t\t\tthis.type = 0x414C;\n\t\t\t}\n\n\t\t\taddFee(fee) {\n\t\t\t\tthis.fee = fee;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddVersion(version) {\n\t\t\t\tthis.version = version;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddType(type) {\n\t\t\t\tthis.type = type;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddDeadline(deadline) {\n\t\t\t\tthis.deadline = deadline;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddRemoteAccountKey(remoteAccountKey) {\n\t\t\t\tthis.remoteAccountKey = convert.hexToUint8(remoteAccountKey);\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddLinkAction(linkAction) {\n\t\t\t\tthis.linkAction = linkAction;\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tbuild() {\n\t\t\t\tconst builder = new flatbuffers.Builder(1);\n\n\t\t\t\t// Create vectors\n\t\t\t\tconst signatureVector = AccountLinkTransactionBuffer\n\t\t\t\t\t.createSignatureVector(builder, Array(...Array(64)).map(Number.prototype.valueOf, 0));\n\t\t\t\tconst signerVector = AccountLinkTransactionBuffer.createSignerVector(builder, Array(...Array(32)).map(Number.prototype.valueOf, 0));\n\t\t\t\tconst deadlineVector = AccountLinkTransactionBuffer.createDeadlineVector(builder, this.deadline);\n\t\t\t\tconst feeVector = AccountLinkTransactionBuffer.createFeeVector(builder, this.fee);\n\t\t\t\tconst remoteAccountKeyVector = AccountLinkTransactionBuffer.createRemoteAccountKeyVector(builder, this.remoteAccountKey);\n\n\n\t\t\t\tAccountLinkTransactionBuffer.startAccountLinkTransactionBuffer(builder);\n\t\t\t\tAccountLinkTransactionBuffer.addSize(builder, 153);\n\t\t\t\tAccountLinkTransactionBuffer.addSignature(builder, signatureVector);\n\t\t\t\tAccountLinkTransactionBuffer.addSigner(builder, signerVector);\n\t\t\t\tAccountLinkTransactionBuffer.addVersion(builder, this.version);\n\t\t\t\tAccountLinkTransactionBuffer.addType(builder, this.type);\n\t\t\t\tAccountLinkTransactionBuffer.addFee(builder, feeVector);\n\t\t\t\tAccountLinkTransactionBuffer.addDeadline(builder, deadlineVector);\n\t\t\t\tAccountLinkTransactionBuffer.addRemoteAccountKey(builder, remoteAccountKeyVector);\n\t\t\t\tAccountLinkTransactionBuffer.addLinkAction(builder, this.linkAction);\n\n\n\t\t\t\t// Calculate size\n\n\t\t\t\tconst codedTransfer = AccountLinkTransactionBuffer.endAccountLinkTransactionBuffer(builder);\n\t\t\t\tbuilder.finish(codedTransfer);\n\n\t\t\t\tconst bytes = builder.asUint8Array();\n\t\t\t\treturn new AccountLinkTransaction(bytes, AccountLinkTransactionSchema);\n\t\t\t}\n\t\t}\n\n\t\treturn Builder;\n\t}\n}\n"]}