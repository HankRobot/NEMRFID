{"version":3,"sources":["../../src/transactions/MosaicAliasTransaction.js"],"names":["MosaicAliasTransactionBuffer","MosaicAliasTransactionBufferPackage","Buffers","require","flatbuffers","MosaicAliasTransaction","Builder","fee","version","type","deadline","actionType","namespaceId","mosaicId","builder","signatureVector","createSignatureVector","Array","map","Number","prototype","valueOf","signerVector","createSignerVector","deadlineVector","createDeadlineVector","feeVector","createFeeVector","namespaceIdVector","createNamespaceIdVector","mosaicIdVector","createMosaicIdVector","startMosaicAliasTransactionBuffer","addSize","addSignature","addSigner","addVersion","addType","addFee","addDeadline","addActionType","addNamespaceId","addMosaicId","codedMosaicChangeSupply","endMosaicAliasTransactionBuffer","finish","bytes","asUint8Array","MosaicAliasTransactionSchema","VerifiableTransaction"],"mappings":"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","file":"MosaicAliasTransaction.js","sourcesContent":["/*\n * Copyright 2019 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport VerifiableTransaction from './VerifiableTransaction';\nimport MosaicAliasTransactionSchema from '../schema/MosaicAliasTransactionSchema';\nimport MosaicAliasTransactionBufferPackage from '../buffers/MosaicAliasTransactionBuffer';\n\nconst { MosaicAliasTransactionBuffer } = MosaicAliasTransactionBufferPackage.Buffers;\n\nconst { flatbuffers } = require('flatbuffers');\n\n/**\n * @module transactions/MosaicAliasTransaction\n */\nexport default class MosaicAliasTransaction extends VerifiableTransaction {\n\tstatic get Builder() {\n\t\tclass Builder {\n\t\t\tconstructor() {\n\t\t\t\tthis.fee = [0, 0];\n\t\t\t\tthis.version = 36865;\n\t\t\t\tthis.type = 0x434E;\n\t\t\t}\n\n\t\t\taddFee(fee) {\n\t\t\t\tthis.fee = fee;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddVersion(version) {\n\t\t\t\tthis.version = version;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddType(type) {\n\t\t\t\tthis.type = type;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddDeadline(deadline) {\n\t\t\t\tthis.deadline = deadline;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddActionType(actionType) {\n\t\t\t\tthis.actionType = actionType;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddNamespaceId(namespaceId) {\n\t\t\t\tthis.namespaceId = namespaceId;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddMosaicId(mosaicId) {\n\t\t\t\tthis.mosaicId = mosaicId;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tbuild() {\n\t\t\t\tconst builder = new flatbuffers.Builder(1);\n\n\t\t\t\t// Create vectors\n\t\t\t\tconst signatureVector = MosaicAliasTransactionBuffer\n\t\t\t\t\t.createSignatureVector(builder, Array(...Array(64)).map(Number.prototype.valueOf, 0));\n\t\t\t\tconst signerVector = MosaicAliasTransactionBuffer\n\t\t\t\t\t.createSignerVector(builder, Array(...Array(32)).map(Number.prototype.valueOf, 0));\n\t\t\t\tconst deadlineVector = MosaicAliasTransactionBuffer\n\t\t\t\t\t.createDeadlineVector(builder, this.deadline);\n\t\t\t\tconst feeVector = MosaicAliasTransactionBuffer\n\t\t\t\t\t.createFeeVector(builder, this.fee);\n                const namespaceIdVector = MosaicAliasTransactionBuffer\n                    .createNamespaceIdVector(builder, this.namespaceId);\n\t\t\t\tconst mosaicIdVector = MosaicAliasTransactionBuffer\n\t\t\t\t\t.createMosaicIdVector(builder, this.mosaicId);\n\n\n\t\t\t\tMosaicAliasTransactionBuffer.startMosaicAliasTransactionBuffer(builder);\n\t\t\t\tMosaicAliasTransactionBuffer.addSize(builder, 137);\n\t\t\t\tMosaicAliasTransactionBuffer.addSignature(builder, signatureVector);\n\t\t\t\tMosaicAliasTransactionBuffer.addSigner(builder, signerVector);\n\t\t\t\tMosaicAliasTransactionBuffer.addVersion(builder, this.version);\n\t\t\t\tMosaicAliasTransactionBuffer.addType(builder, this.type);\n\t\t\t\tMosaicAliasTransactionBuffer.addFee(builder, feeVector);\n\t\t\t\tMosaicAliasTransactionBuffer.addDeadline(builder, deadlineVector);\n\t\t\t\tMosaicAliasTransactionBuffer.addActionType(builder, this.actionType);\n\t\t\t\tMosaicAliasTransactionBuffer.addNamespaceId(builder, namespaceIdVector);\n                MosaicAliasTransactionBuffer.addMosaicId(builder, mosaicIdVector);\n\n\t\t\t\t// Calculate size\n\t\t\t\tconst codedMosaicChangeSupply = MosaicAliasTransactionBuffer.endMosaicAliasTransactionBuffer(builder);\n\t\t\t\tbuilder.finish(codedMosaicChangeSupply);\n\n                const bytes = builder.asUint8Array();\n\n\t\t\t\treturn new MosaicAliasTransaction(bytes, MosaicAliasTransactionSchema);\n\t\t\t}\n\t\t}\n\n\t\treturn Builder;\n\t}\n}\n"]}