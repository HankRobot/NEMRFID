{"version":3,"sources":["../../src/transactions/SecretLockTransaction.js"],"names":["SecretLockTransactionBufferPackage","require","flatbuffers","SecretLockTransactionBuffer","default","Buffers","SecretLockTransaction","Builder","fee","version","type","deadline","mosaicId","mosaicAmount","duration","hashAlgorithm","secret","recipient","address","stringToAddress","builder","signatureVector","createSignatureVector","Array","map","Number","prototype","valueOf","signerVector","createSignerVector","deadlineVector","createDeadlineVector","feeVector","createFeeVector","mosaicIdVector","createMosaicIdVector","mosaicAmountVector","createMosaicAmountVector","durationVector","createDurationVector","byteSecret","convert","hexToUint8","length","repeat","secretVector","createSecretVector","recipientVector","createRecipientVector","startSecretLockTransactionBuffer","addSize","addSignature","addSigner","addVersion","addType","addFee","addDeadline","addMosaicId","addMosaicAmount","addDuration","addHashAlgorithm","addSecret","addRecipient","codedSecretLock","endSecretLockTransactionBuffer","finish","bytes","asUint8Array","SecretLockTransactionSchema","VerifiableTransaction"],"mappings":"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","file":"SecretLockTransaction.js","sourcesContent":["/*\n * Copyright 2018 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module transactions/SecretLockTransaction\n */\nimport VerifiableTransaction from './VerifiableTransaction';\nimport * as SecretLockTransactionBufferPackage from '../buffers/SecretLockTransactionBuffer';\nimport SecretLockTransactionSchema from '../schema/SecretLockTransactionSchema';\nimport address from '../coders/address';\nimport convert from '../coders/convert';\n\nconst { flatbuffers } = require('flatbuffers');\n\nconst { SecretLockTransactionBuffer } = SecretLockTransactionBufferPackage.default.Buffers;\n\nexport default class SecretLockTransaction extends VerifiableTransaction {\n\tstatic get Builder() {\n\t\tclass Builder {\n\t\t\tconstructor() {\n\t\t\t\tthis.fee = [0, 0];\n\t\t\t\tthis.version = 36865;\n\t\t\t\tthis.type = 0x424C;\n\t\t\t}\n\n\t\t\taddFee(fee) {\n\t\t\t\tthis.fee = fee;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddVersion(version) {\n\t\t\t\tthis.version = version;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddType(type) {\n\t\t\t\tthis.type = type;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddDeadline(deadline) {\n\t\t\t\tthis.deadline = deadline;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddMosaicId(mosaicId) {\n\t\t\t\tthis.mosaicId = mosaicId;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddMosaicAmount(mosaicAmount) {\n\t\t\t\tthis.mosaicAmount = mosaicAmount;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddDuration(duration) {\n\t\t\t\tthis.duration = duration;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddHashAlgorithm(hashAlgorithm) {\n\t\t\t\tthis.hashAlgorithm = hashAlgorithm;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddSecret(secret) {\n\t\t\t\tthis.secret = secret;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddRecipient(recipient) {\n\t\t\t\tthis.recipient = address.stringToAddress(recipient);\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tbuild() {\n\t\t\t\tconst builder = new flatbuffers.Builder(1);\n\n\t\t\t\t// Create vectors\n\t\t\t\tconst signatureVector = SecretLockTransactionBuffer\n\t\t\t\t\t.createSignatureVector(builder, Array(...Array(64)).map(Number.prototype.valueOf, 0));\n\t\t\t\tconst signerVector = SecretLockTransactionBuffer.createSignerVector(builder, Array(...Array(32)).map(Number.prototype.valueOf, 0));\n\t\t\t\tconst deadlineVector = SecretLockTransactionBuffer.createDeadlineVector(builder, this.deadline);\n\t\t\t\tconst feeVector = SecretLockTransactionBuffer.createFeeVector(builder, this.fee);\n\t\t\t\tconst mosaicIdVector = SecretLockTransactionBuffer.createMosaicIdVector(builder, this.mosaicId);\n\t\t\t\tconst mosaicAmountVector = SecretLockTransactionBuffer.createMosaicAmountVector(builder, this.mosaicAmount);\n\t\t\t\tconst durationVector = SecretLockTransactionBuffer.createDurationVector(builder, this.duration);\n\t\t\t\tconst byteSecret = convert.hexToUint8(64 > this.secret.length ? this.secret + '0'.repeat(64 - this.secret.length) : this.secret);\n\t\t\t\tconst secretVector = SecretLockTransactionBuffer.createSecretVector(builder, byteSecret);\n\t\t\t\tconst recipientVector = SecretLockTransactionBuffer.createRecipientVector(builder, this.recipient);\n\n\t\t\t\tSecretLockTransactionBuffer.startSecretLockTransactionBuffer(builder);\n\t\t\t\tSecretLockTransactionBuffer.addSize(builder, 202);\n\t\t\t\tSecretLockTransactionBuffer.addSignature(builder, signatureVector);\n\t\t\t\tSecretLockTransactionBuffer.addSigner(builder, signerVector);\n\t\t\t\tSecretLockTransactionBuffer.addVersion(builder, this.version);\n\t\t\t\tSecretLockTransactionBuffer.addType(builder, this.type);\n\t\t\t\tSecretLockTransactionBuffer.addFee(builder, feeVector);\n\t\t\t\tSecretLockTransactionBuffer.addDeadline(builder, deadlineVector);\n\t\t\t\tSecretLockTransactionBuffer.addMosaicId(builder, mosaicIdVector);\n\t\t\t\tSecretLockTransactionBuffer.addMosaicAmount(builder, mosaicAmountVector);\n\t\t\t\tSecretLockTransactionBuffer.addDuration(builder, durationVector);\n\t\t\t\tSecretLockTransactionBuffer.addHashAlgorithm(builder, this.hashAlgorithm);\n\t\t\t\tSecretLockTransactionBuffer.addSecret(builder, secretVector);\n\t\t\t\tSecretLockTransactionBuffer.addRecipient(builder, recipientVector);\n\n\t\t\t\tconst codedSecretLock = SecretLockTransactionBuffer.endSecretLockTransactionBuffer(builder);\n\t\t\t\tbuilder.finish(codedSecretLock);\n\n\t\t\t\tconst bytes = builder.asUint8Array();\n\t\t\t\treturn new SecretLockTransaction(bytes, SecretLockTransactionSchema);\n\t\t\t}\n\t\t}\n\n\t\treturn Builder;\n\t}\n}\n"]}