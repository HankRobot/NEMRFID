{"version":3,"sources":["../../src/transactions/AggregateTransaction.js"],"names":["require","flatbuffers","AggregateTransactionBuffer","AggregateTransactionBufferPackage","Buffers","AggregateTransaction","initializer","cosigners","signedTransaction","signTransaction","forEach","signatureTransaction","CosignatureTransaction","hash","signatureCosignTransaction","signCosignatoriesTransaction","cosigner","payload","signer","signature","size","length","toString","formatedSize","substr","littleEndianSize","cosignedSignedTransactions","cosignedTransaction","Builder","fee","version","type","deadline","transactions","tmp","i","concat","builder","signatureVector","createSignatureVector","Array","map","Number","prototype","valueOf","signerVector","createSignerVector","deadlineVector","createDeadlineVector","feeVector","createFeeVector","modificationsVector","createTransactionsVector","startAggregateTransactionBuffer","addSize","addSignature","addSigner","addVersion","addType","addFee","addDeadline","addTransactionsSize","addTransactions","codedAggregate","endAggregateTransactionBuffer","finish","bytes","asUint8Array","AggregateTransactionSchema","VerifiableTransaction"],"mappings":"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","file":"AggregateTransaction.js","sourcesContent":["/*\n * Copyright 2018 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module transactions/AggregateTransaction\n */\nimport VerifiableTransaction from './VerifiableTransaction';\nimport AggregateTransactionSchema from '../schema/AggregateTransactionSchema';\nimport CosignatureTransaction from './CosignatureTransaction';\nimport AggregateTransactionBufferPackage from '../buffers/AggregateTransactionBuffer';\n\nconst { flatbuffers } = require('flatbuffers');\n\nconst { AggregateTransactionBuffer } = AggregateTransactionBufferPackage.Buffers;\n\nexport default class AggregateTransaction extends VerifiableTransaction {\n\tstatic get Builder() {\n\t\tclass Builder {\n\t\t\tconstructor() {\n\t\t\t\tthis.fee = [0, 0];\n\t\t\t\tthis.version = 36867;\n\t\t\t\tthis.type = 0x4141;\n\t\t\t}\n\n\t\t\taddFee(fee) {\n\t\t\t\tthis.fee = fee;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddVersion(version) {\n\t\t\t\tthis.version = version;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddType(type) {\n\t\t\t\tthis.type = type;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddDeadline(deadline) {\n\t\t\t\tthis.deadline = deadline;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddTransactions(transactions) {\n\t\t\t\tlet tmp = [];\n\t\t\t\tfor (let i = 0; i < transactions.length; ++i)\n\t\t\t\t\ttmp = tmp.concat(transactions[i]);\n\n\t\t\t\tthis.transactions = tmp;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tbuild() {\n\t\t\t\tconst builder = new flatbuffers.Builder(1);\n\n\t\t\t\t// Create vectors\n\t\t\t\tconst signatureVector = AggregateTransactionBuffer\n\t\t\t\t\t.createSignatureVector(builder, Array(...Array(64))\n\t\t\t\t\t\t.map(Number.prototype.valueOf, 0));\n\t\t\t\tconst signerVector = AggregateTransactionBuffer\n\t\t\t\t\t.createSignerVector(builder, Array(...Array(32))\n\t\t\t\t\t\t.map(Number.prototype.valueOf, 0));\n\t\t\t\tconst deadlineVector = AggregateTransactionBuffer.createDeadlineVector(builder, this.deadline);\n\t\t\t\tconst feeVector = AggregateTransactionBuffer.createFeeVector(builder, this.fee);\n\t\t\t\tconst modificationsVector = AggregateTransactionBuffer.createTransactionsVector(builder, this.transactions);\n\n\t\t\t\tAggregateTransactionBuffer.startAggregateTransactionBuffer(builder);\n\t\t\t\tAggregateTransactionBuffer.addSize(builder, 120 + 4 + this.transactions.length);\n\t\t\t\tAggregateTransactionBuffer.addSignature(builder, signatureVector);\n\t\t\t\tAggregateTransactionBuffer.addSigner(builder, signerVector);\n\t\t\t\tAggregateTransactionBuffer.addVersion(builder, this.version);\n\t\t\t\tAggregateTransactionBuffer.addType(builder, this.type);\n\t\t\t\tAggregateTransactionBuffer.addFee(builder, feeVector);\n\t\t\t\tAggregateTransactionBuffer.addDeadline(builder, deadlineVector);\n\t\t\t\tAggregateTransactionBuffer.addTransactionsSize(builder, 0 !== this.transactions.length ? this.transactions.length : 4294967296);\n\t\t\t\tAggregateTransactionBuffer.addTransactions(builder, modificationsVector);\n\n\t\t\t\t// Calculate size\n\t\t\t\tconst codedAggregate = AggregateTransactionBuffer.endAggregateTransactionBuffer(builder);\n\t\t\t\tbuilder.finish(codedAggregate);\n\n\t\t\t\tconst bytes = builder.asUint8Array();\n\t\t\t\treturn new AggregateTransaction(bytes, AggregateTransactionSchema);\n\t\t\t}\n\t\t}\n\n\t\treturn Builder;\n\t}\n\n\tsignTransactionWithCosigners(initializer, cosigners) {\n\t\tconst signedTransaction = this.signTransaction(initializer);\n\t\tcosigners.forEach(cosigner => {\n\t\t\tconst signatureTransaction = new CosignatureTransaction(signedTransaction.hash);\n\t\t\tconst signatureCosignTransaction = signatureTransaction.signCosignatoriesTransaction(cosigner);\n\t\t\tsignedTransaction.payload = signedTransaction.payload + signatureCosignTransaction.signer + signatureCosignTransaction.signature;\n\t\t});\n\n\t\t// Calculate new size\n\t\tconst size = `00000000${(signedTransaction.payload.length / 2).toString(16)}`;\n\t\tconst formatedSize = size.substr(size.length - 8, size.length);\n\t\tconst littleEndianSize = formatedSize.substr(6, 2) + formatedSize.substr(4, 2) + formatedSize.substr(2, 2) + formatedSize.substr(0, 2);\n\n\t\tsignedTransaction.payload = littleEndianSize +\n\t\t\tsignedTransaction.payload.substr(8, signedTransaction.payload.length - 8);\n\n\t\treturn signedTransaction;\n\t}\n\n\tsignTransactionGivenSignatures(initializer, cosignedSignedTransactions) {\n\t\tconst signedTransaction = this.signTransaction(initializer);\n\t\tcosignedSignedTransactions.forEach(cosignedTransaction => {\n\t\t\tsignedTransaction.payload = signedTransaction.payload + cosignedTransaction.signer + cosignedTransaction.signature;\n\t\t});\n\n\t\t// Calculate new size\n\t\tconst size = `00000000${(signedTransaction.payload.length / 2).toString(16)}`;\n\t\tconst formatedSize = size.substr(size.length - 8, size.length);\n\t\tconst littleEndianSize = formatedSize.substr(6, 2) + formatedSize.substr(4, 2) + formatedSize.substr(2, 2) + formatedSize.substr(0, 2);\n\n\t\tsignedTransaction.payload = littleEndianSize +\n\t\t\tsignedTransaction.payload.substr(8, signedTransaction.payload.length - 8);\n\n\t\treturn signedTransaction;\n\t}\n}\n"]}