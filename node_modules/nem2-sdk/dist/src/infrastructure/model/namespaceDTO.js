"use strict";
/*
 * Copyright 2019 NEM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Catapult REST Endpoints
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.7.16
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
class NamespaceDTO {
    static getAttributeTypeMap() {
        return NamespaceDTO.attributeTypeMap;
    }
}
NamespaceDTO.discriminator = undefined;
NamespaceDTO.attributeTypeMap = [
    {
        "name": "owner",
        "baseName": "owner",
        "type": "string"
    },
    {
        "name": "ownerAddress",
        "baseName": "ownerAddress",
        "type": "string"
    },
    {
        "name": "startHeight",
        "baseName": "startHeight",
        "type": "Array<number>"
    },
    {
        "name": "endHeight",
        "baseName": "endHeight",
        "type": "Array<number>"
    },
    {
        "name": "depth",
        "baseName": "depth",
        "type": "number"
    },
    {
        "name": "level0",
        "baseName": "level0",
        "type": "Array<number>"
    },
    {
        "name": "level1",
        "baseName": "level1",
        "type": "Array<number>"
    },
    {
        "name": "level2",
        "baseName": "level2",
        "type": "Array<number>"
    },
    {
        "name": "type",
        "baseName": "type",
        "type": "NamespaceTypeEnum"
    },
    {
        "name": "alias",
        "baseName": "alias",
        "type": "AliasDTO"
    },
    {
        "name": "parentId",
        "baseName": "parentId",
        "type": "Array<number>"
    }
];
exports.NamespaceDTO = NamespaceDTO;
//# sourceMappingURL=namespaceDTO.js.map