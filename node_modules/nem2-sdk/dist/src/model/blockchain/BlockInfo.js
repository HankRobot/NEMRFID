"use strict";
/*
 * Copyright 2018 NEM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * The block info structure describes basic information of a block.
 */
class BlockInfo {
    /**
     * @param hash
     * @param generationHash
     * @param totalFee
     * @param numTransactions
     * @param signature
     * @param signer
     * @param networkType
     * @param version
     * @param type
     * @param height
     * @param timestamp
     * @param difficulty
     * @param feeMultiplier
     * @param previousBlockHash
     * @param blockTransactionsHash
     * @param blockReceiptsHash
     * @param blockStateHash
     * @param beneficiaryPublicKey
     */
    constructor(/**
                 * The block hash.
                 */ hash, 
    /**
     * The generation hash
     */
    generationHash, 
    /**
     * The sum of all transaction fees included in the block.
     */
    totalFee, 
    /**
     * The number of transactions included.
     */
    numTransactions, 
    /**
     * The block signature.
     * The signature was generated by the signer and can be used to validate that the blockchain
     * data was not modified by a node.
     */
    signature, 
    /**
     * The public account of block harvester.
     */
    signer, 
    /**
     * The network type.
     */
    networkType, 
    /**
     * The transaction version.
     */
    version, 
    /**
     * The block type.
     */
    type, 
    /**
     * The height of which the block was confirmed.
     * Each block has a unique height. Subsequent blocks differ in height by 1.
     */
    height, 
    /**
     * The number of milliseconds elapsed since the creation of the nemesis blockchain.
     */
    timestamp, 
    /**
     * The POI difficulty to harvest a block.
     */
    difficulty, 
    /**
     * The feeMultiplier defined by the harvester.
     */
    feeMultiplier, 
    /**
     * The last block hash.
     */
    previousBlockHash, 
    /**
     * The block transaction hash.
     */
    blockTransactionsHash, 
    /**
     * The block receipt hash.
     */
    blockReceiptsHash, 
    /**
     * The state hash.
     */
    stateHash, 
    /**
     * The beneficiary public key.
     */
    beneficiaryPublicKey) {
        this.hash = hash;
        this.generationHash = generationHash;
        this.totalFee = totalFee;
        this.numTransactions = numTransactions;
        this.signature = signature;
        this.signer = signer;
        this.networkType = networkType;
        this.version = version;
        this.type = type;
        this.height = height;
        this.timestamp = timestamp;
        this.difficulty = difficulty;
        this.feeMultiplier = feeMultiplier;
        this.previousBlockHash = previousBlockHash;
        this.blockTransactionsHash = blockTransactionsHash;
        this.blockReceiptsHash = blockReceiptsHash;
        this.stateHash = stateHash;
        this.beneficiaryPublicKey = beneficiaryPublicKey;
    }
}
exports.BlockInfo = BlockInfo;
//# sourceMappingURL=BlockInfo.js.map