import { PublicAccount } from '../account/PublicAccount';
import { UInt64 } from '../UInt64';
import { NetworkType } from './NetworkType';
/**
 * The block info structure describes basic information of a block.
 */
export declare class BlockInfo {
    /**
                 * The block hash.
                 */ readonly hash: string;
    /**
     * The generation hash
     */
    readonly generationHash: string;
    /**
     * The sum of all transaction fees included in the block.
     */
    readonly totalFee: UInt64;
    /**
     * The number of transactions included.
     */
    readonly numTransactions: number;
    /**
     * The block signature.
     * The signature was generated by the signer and can be used to validate that the blockchain
     * data was not modified by a node.
     */
    readonly signature: string;
    /**
     * The public account of block harvester.
     */
    readonly signer: PublicAccount;
    /**
     * The network type.
     */
    readonly networkType: NetworkType;
    /**
     * The transaction version.
     */
    readonly version: number;
    /**
     * The block type.
     */
    readonly type: number;
    /**
     * The height of which the block was confirmed.
     * Each block has a unique height. Subsequent blocks differ in height by 1.
     */
    readonly height: UInt64;
    /**
     * The number of milliseconds elapsed since the creation of the nemesis blockchain.
     */
    readonly timestamp: UInt64;
    /**
     * The POI difficulty to harvest a block.
     */
    readonly difficulty: UInt64;
    /**
     * The feeMultiplier defined by the harvester.
     */
    readonly feeMultiplier: number;
    /**
     * The last block hash.
     */
    readonly previousBlockHash: string;
    /**
     * The block transaction hash.
     */
    readonly blockTransactionsHash: string;
    /**
     * The block receipt hash.
     */
    readonly blockReceiptsHash: string;
    /**
     * The state hash.
     */
    readonly stateHash: string;
    /**
     * The beneficiary public key.
     */
    readonly beneficiaryPublicKey: PublicAccount | undefined;
    /**
     * @param hash
     * @param generationHash
     * @param totalFee
     * @param numTransactions
     * @param signature
     * @param signer
     * @param networkType
     * @param version
     * @param type
     * @param height
     * @param timestamp
     * @param difficulty
     * @param feeMultiplier
     * @param previousBlockHash
     * @param blockTransactionsHash
     * @param blockReceiptsHash
     * @param blockStateHash
     * @param beneficiaryPublicKey
     */
    constructor(/**
                     * The block hash.
                     */ hash: string, 
        /**
         * The generation hash
         */
        generationHash: string, 
        /**
         * The sum of all transaction fees included in the block.
         */
        totalFee: UInt64, 
        /**
         * The number of transactions included.
         */
        numTransactions: number, 
        /**
         * The block signature.
         * The signature was generated by the signer and can be used to validate that the blockchain
         * data was not modified by a node.
         */
        signature: string, 
        /**
         * The public account of block harvester.
         */
        signer: PublicAccount, 
        /**
         * The network type.
         */
        networkType: NetworkType, 
        /**
         * The transaction version.
         */
        version: number, 
        /**
         * The block type.
         */
        type: number, 
        /**
         * The height of which the block was confirmed.
         * Each block has a unique height. Subsequent blocks differ in height by 1.
         */
        height: UInt64, 
        /**
         * The number of milliseconds elapsed since the creation of the nemesis blockchain.
         */
        timestamp: UInt64, 
        /**
         * The POI difficulty to harvest a block.
         */
        difficulty: UInt64, 
        /**
         * The feeMultiplier defined by the harvester.
         */
        feeMultiplier: number, 
        /**
         * The last block hash.
         */
        previousBlockHash: string, 
        /**
         * The block transaction hash.
         */
        blockTransactionsHash: string, 
        /**
         * The block receipt hash.
         */
        blockReceiptsHash: string, 
        /**
         * The state hash.
         */
        stateHash: string, 
        /**
         * The beneficiary public key.
         */
        beneficiaryPublicKey?: PublicAccount | undefined);
}
